{"version":3,"names":["createCancelError","cause","Error","abortOn","signal","_this$then","abortPromise","abort","reason","addEventListener","once","removeAbortListener","removeEventListener","then","call","_activeRequests","_classPrivateFieldLooseKey","_queuedHandlers","_paused","_pauseTimer","_downLimit","_upperLimit","_rateLimitingTimer","_call","_queueNext","_next","_queue","_dequeue","_resume","_increaseLimit","RateLimitedQueue","constructor","limit","Object","defineProperty","value","_dequeue2","_queue2","_next2","_queueNext2","_call2","writable","resume","_classPrivateFieldLooseBase","setTimeout","Math","ceil","i","floor","Infinity","run","fn","queueOptions","wrapSyncFunction","_this","_len","arguments","length","args","Array","_key","queuedRequest","queueMicrotask","done","wrapPromiseFunction","_this2","_len2","_key2","outerPromise","Promise","resolve","reject","cancelError","innerPromise","err","result","clearTimeout","pause","duration","rateLimit","Number","isFinite","isPaused","cancelActive","next","shift","handler","options","priority","index","findIndex","other","push","splice","indexOf","internalRateLimitedQueue","Symbol"],"sources":["RateLimitedQueue.ts"],"sourcesContent":["function createCancelError(cause?: string) {\n  return new Error('Cancelled', { cause })\n}\n\nfunction abortOn(\n  this: { abort: (cause: string) => void; then?: Promise<any>['then'] },\n  signal?: AbortSignal,\n) {\n  if (signal != null) {\n    const abortPromise = () => this.abort(signal.reason)\n    signal.addEventListener('abort', abortPromise, { once: true })\n    const removeAbortListener = () => {\n      signal.removeEventListener('abort', abortPromise)\n    }\n    this.then?.(removeAbortListener, removeAbortListener)\n  }\n\n  return this\n}\n\ntype Handler = {\n  shouldBeRequeued?: boolean\n  fn: () => (...args: any[]) => Promise<void> | void\n  priority: number\n  abort: (cause?: unknown) => void\n  done: () => void\n}\n\ntype QueueOptions = {\n  priority?: number\n}\n\nexport interface AbortablePromise<T> extends Promise<T> {\n  abort(cause?: unknown): void\n  abortOn: (...args: Parameters<typeof abortOn>) => AbortablePromise<T>\n}\n\nexport type WrapPromiseFunctionType<T extends (...args: any[]) => any> = (\n  ...args: Parameters<T>\n) => AbortablePromise<Awaited<ReturnType<T>>>\n\nexport class RateLimitedQueue {\n  #activeRequests = 0\n\n  #queuedHandlers: Handler[] = []\n\n  #paused = false\n\n  #pauseTimer?: ReturnType<typeof setTimeout>\n\n  #downLimit = 1\n\n  #upperLimit?: number\n\n  #rateLimitingTimer?: ReturnType<typeof setTimeout>\n\n  limit: number\n\n  constructor(limit?: number) {\n    if (typeof limit !== 'number' || limit === 0) {\n      this.limit = Infinity\n    } else {\n      this.limit = limit\n    }\n  }\n\n  #call(fn: Handler['fn']) {\n    this.#activeRequests += 1\n\n    let done = false\n\n    let cancelActive: (cause?: unknown) => void\n    try {\n      cancelActive = fn()\n    } catch (err) {\n      this.#activeRequests -= 1\n      throw err\n    }\n\n    return {\n      abort: (cause?: unknown) => {\n        if (done) return\n        done = true\n        this.#activeRequests -= 1\n        cancelActive?.(cause)\n        this.#queueNext()\n      },\n\n      done: () => {\n        if (done) return\n        done = true\n        this.#activeRequests -= 1\n        this.#queueNext()\n      },\n    }\n  }\n\n  #queueNext() {\n    // Do it soon but not immediately, this allows clearing out the entire queue synchronously\n    // one by one without continuously _advancing_ it (and starting new tasks before immediately\n    // aborting them)\n    queueMicrotask(() => this.#next())\n  }\n\n  #next() {\n    if (this.#paused || this.#activeRequests >= this.limit) {\n      return\n    }\n    if (this.#queuedHandlers.length === 0) {\n      return\n    }\n\n    // Dispatch the next request, and update the abort/done handlers\n    // so that cancelling it does the Right Thing (and doesn't just try\n    // to dequeue an already-running request).\n    const next = this.#queuedHandlers.shift()\n    if (next == null) {\n      throw new Error('Invariant violation: next is null')\n    }\n    const handler = this.#call(next.fn)\n    next.abort = handler.abort\n    next.done = handler.done\n  }\n\n  #queue(fn: Handler['fn'], options?: QueueOptions) {\n    const handler: Handler = {\n      fn,\n      priority: options?.priority || 0,\n      abort: () => {\n        this.#dequeue(handler)\n      },\n      done: () => {\n        throw new Error(\n          'Cannot mark a queued request as done: this indicates a bug',\n        )\n      },\n    }\n\n    const index = this.#queuedHandlers.findIndex((other) => {\n      return handler.priority > other.priority\n    })\n    if (index === -1) {\n      this.#queuedHandlers.push(handler)\n    } else {\n      this.#queuedHandlers.splice(index, 0, handler)\n    }\n    return handler\n  }\n\n  #dequeue(handler: Handler) {\n    const index = this.#queuedHandlers.indexOf(handler)\n    if (index !== -1) {\n      this.#queuedHandlers.splice(index, 1)\n    }\n  }\n\n  run(\n    fn: Handler['fn'],\n    queueOptions?: QueueOptions,\n  ): Handler | Omit<Handler, 'fn' | 'priority'> {\n    if (!this.#paused && this.#activeRequests < this.limit) {\n      return this.#call(fn)\n    }\n    return this.#queue(fn, queueOptions)\n  }\n\n  wrapSyncFunction(fn: () => void, queueOptions: QueueOptions) {\n    return (\n      ...args: Parameters<Handler['fn']>\n    ): { abortOn: typeof abortOn; abort: Handler['abort'] } => {\n      const queuedRequest = this.run(() => {\n        fn(...args)\n        queueMicrotask(() => queuedRequest.done())\n        return () => {}\n      }, queueOptions)\n\n      return {\n        abortOn,\n        abort() {\n          queuedRequest.abort()\n        },\n      }\n    }\n  }\n\n  wrapPromiseFunction<T extends (...args: any[]) => any>(\n    fn: T,\n    queueOptions?: QueueOptions,\n  ) {\n    return (\n      ...args: Parameters<T>\n    ): AbortablePromise<Awaited<ReturnType<T>>> => {\n      let queuedRequest: ReturnType<RateLimitedQueue['run']>\n      const outerPromise = new Promise((resolve, reject) => {\n        queuedRequest = this.run(() => {\n          let cancelError: ReturnType<typeof createCancelError>\n          let innerPromise\n          try {\n            innerPromise = Promise.resolve(fn(...args))\n          } catch (err) {\n            innerPromise = Promise.reject(err)\n          }\n\n          innerPromise.then(\n            (result) => {\n              if (cancelError) {\n                reject(cancelError)\n              } else {\n                queuedRequest.done()\n                resolve(result)\n              }\n            },\n            (err) => {\n              if (cancelError) {\n                reject(cancelError)\n              } else {\n                queuedRequest.done()\n                reject(err)\n              }\n            },\n          )\n\n          return (cause) => {\n            cancelError = createCancelError(cause)\n          }\n        }, queueOptions)\n      }) as AbortablePromise<Awaited<ReturnType<T>>>\n\n      outerPromise.abort = (cause) => {\n        queuedRequest.abort(cause)\n      }\n      outerPromise.abortOn = abortOn as any\n\n      return outerPromise\n    }\n  }\n\n  resume(): void {\n    this.#paused = false\n    clearTimeout(this.#pauseTimer)\n    for (let i = 0; i < this.limit; i++) {\n      this.#queueNext()\n    }\n  }\n\n  #resume = () => this.resume()\n\n  /**\n   * Freezes the queue for a while or indefinitely.\n   *\n   * @param {number | null } [duration] Duration for the pause to happen, in milliseconds.\n   *                                    If omitted, the queue won't resume automatically.\n   */\n  pause(duration: number | null = null): void {\n    this.#paused = true\n    clearTimeout(this.#pauseTimer)\n    if (duration != null) {\n      this.#pauseTimer = setTimeout(this.#resume, duration)\n    }\n  }\n\n  /**\n   * Pauses the queue for a duration, and lower the limit of concurrent requests\n   * when the queue resumes. When the queue resumes, it tries to progressively\n   * increase the limit in `this.#increaseLimit` until another call is made to\n   * `this.rateLimit`.\n   * Call this function when using the RateLimitedQueue for network requests and\n   * the remote server responds with 429 HTTP code.\n   *\n   * @param {number} duration in milliseconds.\n   */\n  rateLimit(duration: number): void {\n    clearTimeout(this.#rateLimitingTimer)\n    this.pause(duration)\n    if (this.limit > 1 && Number.isFinite(this.limit)) {\n      this.#upperLimit = this.limit - 1\n      this.limit = this.#downLimit\n      this.#rateLimitingTimer = setTimeout(this.#increaseLimit, duration)\n    }\n  }\n\n  #increaseLimit = () => {\n    if (this.#paused) {\n      this.#rateLimitingTimer = setTimeout(this.#increaseLimit, 0)\n      return\n    }\n    this.#downLimit = this.limit\n    this.limit = Math.ceil((this.#upperLimit! + this.#downLimit) / 2)\n    for (let i = this.#downLimit; i <= this.limit; i++) {\n      this.#queueNext()\n    }\n    if (this.#upperLimit! - this.#downLimit > 3) {\n      this.#rateLimitingTimer = setTimeout(this.#increaseLimit, 2000)\n    } else {\n      this.#downLimit = Math.floor(this.#downLimit / 2)\n    }\n  }\n\n  get isPaused(): boolean {\n    return this.#paused\n  }\n}\n\nexport const internalRateLimitedQueue = Symbol('__queue')\n"],"mappings":"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","ignoreList":[]}