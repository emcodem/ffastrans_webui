{"version":3,"names":["filterNonFailedFiles","files","hasError","file","error","filter","filterFilesToEmitUploadStarted","_file$progress","progress","uploadStarted","isRestored"],"sources":["fileFilters.ts"],"sourcesContent":["import type { UppyFile } from './UppyFile.ts'\n\nexport function filterNonFailedFiles(\n  files: UppyFile<any, any>[],\n): UppyFile<any, any>[] {\n  const hasError = (file: UppyFile<any, any>): boolean =>\n    'error' in file && !!file.error\n\n  return files.filter((file) => !hasError(file))\n}\n\n// Don't double-emit upload-started for Golden Retriever-restored files that were already started\nexport function filterFilesToEmitUploadStarted(\n  files: UppyFile<any, any>[],\n): UppyFile<any, any>[] {\n  return files.filter(\n    (file) => !file.progress?.uploadStarted || !file.isRestored,\n  )\n}\n"],"mappings":"AAEA,OAAO,SAASA,oBAAoBA,CAClCC,KAA2B,EACL;EACtB,MAAMC,QAAQ,GAAIC,IAAwB,IACxC,OAAO,IAAIA,IAAI,IAAI,CAAC,CAACA,IAAI,CAACC,KAAK;EAEjC,OAAOH,KAAK,CAACI,MAAM,CAAEF,IAAI,IAAK,CAACD,QAAQ,CAACC,IAAI,CAAC,CAAC;AAChD;;AAEA;AACA,OAAO,SAASG,8BAA8BA,CAC5CL,KAA2B,EACL;EACtB,OAAOA,KAAK,CAACI,MAAM,CAChBF,IAAI;IAAA,IAAAI,cAAA;IAAA,OAAK,GAAAA,cAAA,GAACJ,IAAI,CAACK,QAAQ,aAAbD,cAAA,CAAeE,aAAa,KAAI,CAACN,IAAI,CAACO,UAAU;EAAA,CAC7D,CAAC;AACH","ignoreList":[]}