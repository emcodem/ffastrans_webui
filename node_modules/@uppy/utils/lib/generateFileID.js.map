{"version":3,"names":["getFileType","encodeCharacter","character","charCodeAt","toString","encodeFilename","name","suffix","replace","generateFileID","file","instanceId","id","toLowerCase","type","undefined","meta","relativePath","data","size","lastModified","hasFileStableId","isRemote","remote","stableIdProviders","Set","has","provider","getSafeFileId","fileType"],"sources":["generateFileID.ts"],"sourcesContent":["import type { MinimalRequiredUppyFile, UppyFile } from './UppyFile.ts'\nimport getFileType from './getFileType.ts'\n\nfunction encodeCharacter(character: string): string {\n  return character.charCodeAt(0).toString(32)\n}\n\nfunction encodeFilename(name: string): string {\n  let suffix = ''\n  return (\n    name.replace(/[^A-Z0-9]/gi, (character) => {\n      suffix += `-${encodeCharacter(character)}`\n      return '/'\n    }) + suffix\n  )\n}\n\n/**\n * Takes a file object and turns it into fileID, by converting file.name to lowercase,\n * removing extra characters and adding type, size and lastModified\n */\nexport default function generateFileID(\n  file: Omit<MinimalRequiredUppyFile<any, any>, 'name'> &\n    Pick<UppyFile<any, any>, 'name'>,\n  instanceId: string,\n): string {\n  // It's tempting to do `[items].filter(Boolean).join('-')` here, but that\n  // is slower! simple string concatenation is fast\n\n  let id = instanceId || 'uppy'\n  if (typeof file.name === 'string') {\n    id += `-${encodeFilename(file.name.toLowerCase())}`\n  }\n\n  if (file.type !== undefined) {\n    id += `-${file.type}`\n  }\n\n  if (file.meta && typeof file.meta.relativePath === 'string') {\n    id += `-${encodeFilename(file.meta.relativePath.toLowerCase())}`\n  }\n\n  if (file.data.size !== undefined) {\n    id += `-${file.data.size}`\n  }\n  if ((file.data as File).lastModified !== undefined) {\n    id += `-${(file.data as File).lastModified}`\n  }\n\n  return id\n}\n\n// If the provider has a stable, unique ID, then we can use that to identify the file.\n// Then we don't have to generate our own ID, and we can add the same file many times if needed (different path)\nfunction hasFileStableId(\n  file: Omit<MinimalRequiredUppyFile<any, any>, 'name'> &\n    Pick<UppyFile<any, any>, 'name'>,\n): boolean {\n  if (!file.isRemote || !file.remote) return false\n  // These are the providers that it seems like have stable IDs for their files. The other's I haven't checked yet.\n  const stableIdProviders = new Set([\n    'box',\n    'dropbox',\n    'drive',\n    'facebook',\n    'unsplash',\n  ])\n  return stableIdProviders.has(file.remote.provider as any)\n}\n\nexport function getSafeFileId(\n  file: Omit<MinimalRequiredUppyFile<any, any>, 'name'> &\n    Pick<UppyFile<any, any>, 'name'>,\n  instanceId: string,\n): string {\n  if (hasFileStableId(file)) return file.id!\n\n  const fileType = getFileType(file)\n\n  return generateFileID(\n    {\n      ...file,\n      type: fileType,\n    },\n    instanceId,\n  )\n}\n"],"mappings":"AACA,OAAOA,WAAW,MAAM,kBAAkB;AAE1C,SAASC,eAAeA,CAACC,SAAiB,EAAU;EAClD,OAAOA,SAAS,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC;AAC7C;AAEA,SAASC,cAAcA,CAACC,IAAY,EAAU;EAC5C,IAAIC,MAAM,GAAG,EAAE;EACf,OACED,IAAI,CAACE,OAAO,CAAC,aAAa,EAAGN,SAAS,IAAK;IACzCK,MAAM,IAAI,IAAIN,eAAe,CAACC,SAAS,CAAC,EAAE;IAC1C,OAAO,GAAG;EACZ,CAAC,CAAC,GAAGK,MAAM;AAEf;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAASE,cAAcA,CACpCC,IACkC,EAClCC,UAAkB,EACV;EACR;EACA;;EAEA,IAAIC,EAAE,GAAGD,UAAU,IAAI,MAAM;EAC7B,IAAI,OAAOD,IAAI,CAACJ,IAAI,KAAK,QAAQ,EAAE;IACjCM,EAAE,IAAI,IAAIP,cAAc,CAACK,IAAI,CAACJ,IAAI,CAACO,WAAW,CAAC,CAAC,CAAC,EAAE;EACrD;EAEA,IAAIH,IAAI,CAACI,IAAI,KAAKC,SAAS,EAAE;IAC3BH,EAAE,IAAI,IAAIF,IAAI,CAACI,IAAI,EAAE;EACvB;EAEA,IAAIJ,IAAI,CAACM,IAAI,IAAI,OAAON,IAAI,CAACM,IAAI,CAACC,YAAY,KAAK,QAAQ,EAAE;IAC3DL,EAAE,IAAI,IAAIP,cAAc,CAACK,IAAI,CAACM,IAAI,CAACC,YAAY,CAACJ,WAAW,CAAC,CAAC,CAAC,EAAE;EAClE;EAEA,IAAIH,IAAI,CAACQ,IAAI,CAACC,IAAI,KAAKJ,SAAS,EAAE;IAChCH,EAAE,IAAI,IAAIF,IAAI,CAACQ,IAAI,CAACC,IAAI,EAAE;EAC5B;EACA,IAAKT,IAAI,CAACQ,IAAI,CAAUE,YAAY,KAAKL,SAAS,EAAE;IAClDH,EAAE,IAAI,IAAKF,IAAI,CAACQ,IAAI,CAAUE,YAAY,EAAE;EAC9C;EAEA,OAAOR,EAAE;AACX;;AAEA;AACA;AACA,SAASS,eAAeA,CACtBX,IACkC,EACzB;EACT,IAAI,CAACA,IAAI,CAACY,QAAQ,IAAI,CAACZ,IAAI,CAACa,MAAM,EAAE,OAAO,KAAK;EAChD;EACA,MAAMC,iBAAiB,GAAG,IAAIC,GAAG,CAAC,CAChC,KAAK,EACL,SAAS,EACT,OAAO,EACP,UAAU,EACV,UAAU,CACX,CAAC;EACF,OAAOD,iBAAiB,CAACE,GAAG,CAAChB,IAAI,CAACa,MAAM,CAACI,QAAe,CAAC;AAC3D;AAEA,OAAO,SAASC,aAAaA,CAC3BlB,IACkC,EAClCC,UAAkB,EACV;EACR,IAAIU,eAAe,CAACX,IAAI,CAAC,EAAE,OAAOA,IAAI,CAACE,EAAE;EAEzC,MAAMiB,QAAQ,GAAG7B,WAAW,CAACU,IAAI,CAAC;EAElC,OAAOD,cAAc,CACnB;IACE,GAAGC,IAAI;IACPI,IAAI,EAAEe;EACR,CAAC,EACDlB,UACF,CAAC;AACH","ignoreList":[]}