{"version":3,"names":[],"sources":["UppyFile.ts"],"sourcesContent":["import type { FileProgress } from './FileProgress.ts'\n\nexport type Meta = Record<string, unknown>\n\nexport type Body = Record<string, unknown>\n\nexport type InternalMetadata = { name: string; type?: string }\n\nexport interface UppyFile<M extends Meta, B extends Body> {\n  data: Blob | File\n  error?: string | null\n  extension: string\n  id: string\n  isPaused?: boolean\n  isRestored?: boolean\n  isRemote: boolean\n  isGhost: boolean\n  meta: InternalMetadata & M\n  name?: string\n  preview?: string\n  progress: FileProgress\n  missingRequiredMetaFields?: string[]\n  remote?: {\n    body?: Record<string, unknown>\n    companionUrl: string\n    host?: string\n    provider?: string\n    providerName?: string\n    requestClientId: string\n    url: string\n  }\n  serverToken?: string | null\n  size: number | null\n  source?: string\n  type: string\n  uploadURL?: string\n  response?: {\n    body?: B\n    status: number\n    bytesUploaded?: number\n    uploadURL?: string\n  }\n}\n\n/*\n * The user facing type for UppyFile used in uppy.addFile() and uppy.setOptions()\n */\nexport type MinimalRequiredUppyFile<M extends Meta, B extends Body> = Required<\n  Pick<UppyFile<M, B>, 'name'>\n> &\n  Partial<\n    Omit<UppyFile<M, B>, 'name' | 'data' | 'meta'>\n    // We want to omit the 'meta' from UppyFile because of internal metadata\n    // (see InternalMetadata in `UppyFile.ts`), as when adding a new file\n    // that is not required.\n  > & { meta?: M; data: { size: number | null } }\n\n/*\n * We are not entirely sure what a \"tag file\" is.\n * It is used as an intermidiate type between `CompanionFile` and `UppyFile`\n * in `@uppy/provider-views` and `@uppy/url`.\n * TODO: remove this in favor of UppyFile\n */\nexport type TagFile<M extends Meta> = {\n  id?: string\n  source: string\n  name: string\n  type: string\n  isRemote: boolean\n  preview?: string\n  data: {\n    size: number | null\n  }\n  body?: {\n    url?: string\n    fileId?: string\n  }\n  meta?: {\n    authorName?: string\n    authorUrl?: string\n    relativePath?: string | null\n    absolutePath?: string\n  } & M\n  remote: {\n    companionUrl: string\n    url: string\n    body: {\n      fileId: string\n      url?: string\n    }\n    providerName?: string\n    provider?: string\n    requestClientId: string\n  }\n}\n"],"mappings":"","ignoreList":[]}