{"version":3,"names":["separator","truncateString","string","maxLength","length","slice","charsToShow","frontChars","Math","ceil","backChars","floor"],"sources":["truncateString.ts"],"sourcesContent":["/**\n * Truncates a string to the given number of chars (maxLength) by inserting '...' in the middle of that string.\n * Partially taken from https://stackoverflow.com/a/5723274/3192470.\n */\nconst separator = '...'\nexport default function truncateString(\n  string: string,\n  maxLength: number,\n): string {\n  // Return the empty string if maxLength is zero\n  if (maxLength === 0) return ''\n  // Return original string if it's already shorter than maxLength\n  if (string.length <= maxLength) return string\n  // Return truncated substring appended of the ellipsis char if string can't be meaningfully truncated\n  if (maxLength <= separator.length + 1)\n    return `${string.slice(0, maxLength - 1)}â€¦`\n\n  const charsToShow = maxLength - separator.length\n  const frontChars = Math.ceil(charsToShow / 2)\n  const backChars = Math.floor(charsToShow / 2)\n\n  return string.slice(0, frontChars) + separator + string.slice(-backChars)\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,MAAMA,SAAS,GAAG,KAAK;AACvB,eAAe,SAASC,cAAcA,CACpCC,MAAc,EACdC,SAAiB,EACT;EACR;EACA,IAAIA,SAAS,KAAK,CAAC,EAAE,OAAO,EAAE;EAC9B;EACA,IAAID,MAAM,CAACE,MAAM,IAAID,SAAS,EAAE,OAAOD,MAAM;EAC7C;EACA,IAAIC,SAAS,IAAIH,SAAS,CAACI,MAAM,GAAG,CAAC,EACnC,OAAO,GAAGF,MAAM,CAACG,KAAK,CAAC,CAAC,EAAEF,SAAS,GAAG,CAAC,CAAC,GAAG;EAE7C,MAAMG,WAAW,GAAGH,SAAS,GAAGH,SAAS,CAACI,MAAM;EAChD,MAAMG,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACH,WAAW,GAAG,CAAC,CAAC;EAC7C,MAAMI,SAAS,GAAGF,IAAI,CAACG,KAAK,CAACL,WAAW,GAAG,CAAC,CAAC;EAE7C,OAAOJ,MAAM,CAACG,KAAK,CAAC,CAAC,EAAEE,UAAU,CAAC,GAAGP,SAAS,GAAGE,MAAM,CAACG,KAAK,CAAC,CAACK,SAAS,CAAC;AAC3E","ignoreList":[]}