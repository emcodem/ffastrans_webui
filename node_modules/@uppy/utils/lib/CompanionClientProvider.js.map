{"version":3,"names":[],"sources":["CompanionClientProvider.ts"],"sourcesContent":["import type { CompanionFile } from './CompanionFile.ts'\n\nexport type RequestOptions = {\n  method?: string\n  data?: Record<string, unknown>\n  skipPostResponse?: boolean\n  signal?: AbortSignal\n  authFormData?: unknown\n  qs?: Record<string, string>\n}\n\n/**\n * CompanionClientProvider is subset of the types of the `Provider`\n * class from @uppy/companion-client.\n *\n * This is needed as the `Provider` class is passed around in Uppy and we\n * need to have shared types for it. Although we are duplicating some types,\n * this is still safe as `Provider implements CompanionClientProvider`\n * so any changes here will error there and vice versa.\n *\n * TODO: remove this once companion-client and provider-views are merged into a single plugin.\n */\nexport interface CompanionClientProvider {\n  name: string\n  provider: string\n  login(options?: RequestOptions): Promise<void>\n  logout<ResBody>(options?: RequestOptions): Promise<ResBody>\n  fetchPreAuthToken(): Promise<void>\n  fileUrl: (a: string) => string\n  list(\n    directory: string | null,\n    options: RequestOptions,\n  ): Promise<{\n    username: string\n    nextPagePath: string | null\n    items: CompanionFile[]\n  }>\n}\nexport interface CompanionClientSearchProvider {\n  name: string\n  provider: string\n  fileUrl: (a: string) => string\n  search<ResBody>(text: string, queries?: string): Promise<ResBody>\n}\n"],"mappings":"","ignoreList":[]}