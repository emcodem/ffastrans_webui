{"version":3,"names":["shallowClone","percolateDown","tree","id","shouldMarkAsChecked","children","filter","item","type","parentId","forEach","status","restrictionError","percolateUp","folder","find","validChildren","areAllChildrenChecked","every","areAllChildrenUnchecked","afterToggleCheckbox","oldTree","clickedRange","length","newlyCheckedItems","includes","clickedItem"],"sources":["afterToggleCheckbox.ts"],"sourcesContent":["/* eslint-disable no-param-reassign */\nimport type {\n  PartialTree,\n  PartialTreeFile,\n  PartialTreeFolder,\n  PartialTreeFolderNode,\n  PartialTreeId,\n} from '@uppy/core/lib/Uppy.js'\nimport shallowClone from './shallowClone.ts'\n\n/*\n  FROM        | TO\n\n  root        |  root\n    folder    |    folder\n    folder ✅︎  |    folder ✅︎\n      file    |      file ✅︎\n      file    |      file ✅︎\n      folder  |      folder ✅︎\n        file  |        file ✅︎\n    file      |    file\n    file      |    file\n*/\nconst percolateDown = (\n  tree: PartialTree,\n  id: PartialTreeId,\n  shouldMarkAsChecked: boolean,\n) => {\n  const children = tree.filter(\n    (item) => item.type !== 'root' && item.parentId === id,\n  ) as (PartialTreeFolderNode | PartialTreeFile)[]\n  children.forEach((item) => {\n    item.status =\n      shouldMarkAsChecked && !(item.type === 'file' && item.restrictionError) ?\n        'checked'\n      : 'unchecked'\n    percolateDown(tree, item.id, shouldMarkAsChecked)\n  })\n}\n\n/*\n  FROM         | TO\n\n  root         |  root\n    folder     |    folder\n    folder     |    folder [▬] ('partial' status)\n      file     |      file\n      folder   |      folder ✅︎\n        file ✅︎ |       file ✅︎\n    file       |    file\n    file       |    file\n*/\nconst percolateUp = (tree: PartialTree, id: PartialTreeId) => {\n  const folder = tree.find((item) => item.id === id) as PartialTreeFolder\n  if (folder.type === 'root') return\n\n  const validChildren = tree.filter(\n    (item) =>\n      // is a child\n      item.type !== 'root' &&\n      item.parentId === folder.id &&\n      // does pass validations\n      !(item.type === 'file' && item.restrictionError),\n  ) as (PartialTreeFile | PartialTreeFolderNode)[]\n\n  const areAllChildrenChecked = validChildren.every(\n    (item) => item.status === 'checked',\n  )\n  const areAllChildrenUnchecked = validChildren.every(\n    (item) => item.status === 'unchecked',\n  )\n\n  if (areAllChildrenChecked) {\n    folder.status = 'checked'\n  } else if (areAllChildrenUnchecked) {\n    folder.status = 'unchecked'\n  } else {\n    folder.status = 'partial'\n  }\n\n  percolateUp(tree, folder.parentId)\n}\n\nconst afterToggleCheckbox = (\n  oldTree: PartialTree,\n  clickedRange: string[],\n): PartialTree => {\n  const tree: PartialTree = shallowClone(oldTree)\n\n  if (clickedRange.length >= 2) {\n    // We checked two or more items\n    const newlyCheckedItems = tree.filter(\n      (item) => item.type !== 'root' && clickedRange.includes(item.id),\n    ) as (PartialTreeFile | PartialTreeFolderNode)[]\n\n    newlyCheckedItems.forEach((item) => {\n      if (item.type === 'file') {\n        item.status = item.restrictionError ? 'unchecked' : 'checked'\n      } else {\n        item.status = 'checked'\n      }\n    })\n\n    newlyCheckedItems.forEach((item) => {\n      percolateDown(tree, item.id, true)\n    })\n    percolateUp(tree, newlyCheckedItems[0].parentId)\n  } else {\n    // We checked exactly one item\n    const clickedItem = tree.find((item) => item.id === clickedRange[0]) as\n      | PartialTreeFile\n      | PartialTreeFolderNode\n    clickedItem.status =\n      clickedItem.status === 'checked' ? 'unchecked' : 'checked'\n    percolateDown(tree, clickedItem.id, clickedItem.status === 'checked')\n    percolateUp(tree, clickedItem.parentId)\n  }\n\n  return tree\n}\n\nexport default afterToggleCheckbox\n"],"mappings":"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","ignoreList":[]}