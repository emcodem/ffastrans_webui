{"version":3,"names":["PQueue","shallowClone","recursivelyFetch","queue","poorTree","poorFolder","apiList","validateSingleFile","items","currentPath","cached","nextPagePath","id","response","concat","newFolders","filter","i","isFolder","newFiles","folders","map","folder","type","requestPath","status","parentId","data","files","file","restrictionError","push","forEach","add","afterFill","partialTree","reportProgress","concurrency","poorFolders","item","on","nOfFilesChecked","length","onIdle"],"sources":["afterFill.ts"],"sourcesContent":["/* eslint-disable no-param-reassign */\nimport type {\n  PartialTree,\n  PartialTreeFile,\n  PartialTreeFolderNode,\n  PartialTreeId,\n} from '@uppy/core/lib/Uppy.js'\nimport type { CompanionFile } from '@uppy/utils/lib/CompanionFile'\n// p-queue does not have a `\"main\"` field in its `package.json`, and that makes `import/no-unresolved` freak out.\n// We can safely ignore it because bundlers will happily use the `\"exports\"` field instead.\n// eslint-disable-next-line import/no-unresolved\nimport PQueue from 'p-queue'\nimport shallowClone from './shallowClone.ts'\n\nexport interface ApiList {\n  (directory: PartialTreeId): Promise<{\n    nextPagePath: PartialTreeId\n    items: CompanionFile[]\n  }>\n}\n\nconst recursivelyFetch = async (\n  queue: PQueue,\n  poorTree: PartialTree,\n  poorFolder: PartialTreeFolderNode,\n  apiList: ApiList,\n  validateSingleFile: (file: CompanionFile) => string | null,\n) => {\n  let items: CompanionFile[] = []\n  let currentPath: PartialTreeId =\n    poorFolder.cached ? poorFolder.nextPagePath : poorFolder.id\n  while (currentPath) {\n    const response = await apiList(currentPath)\n    items = items.concat(response.items)\n    currentPath = response.nextPagePath\n  }\n\n  const newFolders = items.filter((i) => i.isFolder === true)\n  const newFiles = items.filter((i) => i.isFolder === false)\n\n  const folders: PartialTreeFolderNode[] = newFolders.map((folder) => ({\n    type: 'folder',\n    id: folder.requestPath,\n\n    cached: false,\n    nextPagePath: null,\n\n    status: 'checked',\n    parentId: poorFolder.id,\n    data: folder,\n  }))\n  const files: PartialTreeFile[] = newFiles.map((file) => {\n    const restrictionError = validateSingleFile(file)\n    return {\n      type: 'file',\n      id: file.requestPath,\n\n      restrictionError,\n\n      status: restrictionError ? 'unchecked' : 'checked',\n      parentId: poorFolder.id,\n      data: file,\n    }\n  })\n\n  poorFolder.cached = true\n  poorFolder.nextPagePath = null\n  poorTree.push(...files, ...folders)\n\n  folders.forEach(async (folder) => {\n    queue.add(() =>\n      recursivelyFetch(queue, poorTree, folder, apiList, validateSingleFile),\n    )\n  })\n}\n\nconst afterFill = async (\n  partialTree: PartialTree,\n  apiList: ApiList,\n  validateSingleFile: (file: CompanionFile) => string | null,\n  reportProgress: (n: number) => void,\n): Promise<PartialTree> => {\n  const queue = new PQueue({ concurrency: 6 })\n\n  // fill up the missing parts of a partialTree!\n  const poorTree: PartialTree = shallowClone(partialTree)\n  const poorFolders = poorTree.filter(\n    (item) =>\n      item.type === 'folder' &&\n      item.status === 'checked' &&\n      // either \"not yet cached at all\" or \"some pages are left to fetch\"\n      (item.cached === false || item.nextPagePath),\n  ) as PartialTreeFolderNode[]\n  // per each poor folder, recursively fetch all files and make them .checked!\n  poorFolders.forEach((poorFolder) => {\n    queue.add(() =>\n      recursivelyFetch(\n        queue,\n        poorTree,\n        poorFolder,\n        apiList,\n        validateSingleFile,\n      ),\n    )\n  })\n\n  queue.on('completed', () => {\n    const nOfFilesChecked = poorTree.filter(\n      (i) => i.type === 'file' && i.status === 'checked',\n    ).length\n    reportProgress(nOfFilesChecked)\n  })\n\n  await queue.onIdle()\n\n  return poorTree\n}\n\nexport default afterFill\n"],"mappings":"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","ignoreList":[]}