{"version":3,"names":["render","findDOMElement","getTextDirection","BasePlugin","debounce","fn","calling","latestArgs","_len","arguments","length","args","Array","_key","Promise","resolve","then","_updateUI","_classPrivateFieldLooseKey","UIPlugin","constructor","Object","defineProperty","writable","value","getTargetPlugin","target","targetPlugin","addTarget","console","warn","Error","cause","Target","uppy","iteratePlugins","p","mount","plugin","callerPluginName","id","targetElement","isTargetDOMEl","uppyRootElement","document","createElement","classList","add","_classPrivateFieldLooseBase","state","getPlugin","afterUpdate","log","opts","replaceTargetContent","innerHTML","getState","el","appendChild","dir","direction","onMount","parent","message","container","update","_classPrivateFieldLoo","_classPrivateFieldLoo2","call","unmount","_this$el","remove","onUnmount"],"sources":["UIPlugin.ts"],"sourcesContent":["/* eslint-disable class-methods-use-this */\nimport { render } from 'preact'\nimport findDOMElement from '@uppy/utils/lib/findDOMElement'\nimport getTextDirection from '@uppy/utils/lib/getTextDirection'\n\nimport type { Body, Meta } from '@uppy/utils/lib/UppyFile'\nimport BasePlugin from './BasePlugin.ts'\nimport type { PluginOpts } from './BasePlugin.ts'\nimport type { State } from './Uppy.ts'\n\n/**\n * Defer a frequent call to the microtask queue.\n */\nfunction debounce<T extends (...args: any[]) => any>(\n  fn: T,\n): (...args: Parameters<T>) => Promise<ReturnType<T>> {\n  let calling: Promise<ReturnType<T>> | null = null\n  let latestArgs: Parameters<T>\n  return (...args) => {\n    latestArgs = args\n    if (!calling) {\n      calling = Promise.resolve().then(() => {\n        calling = null\n        // At this point `args` may be different from the most\n        // recent state, if multiple calls happened since this task\n        // was queued. So we use the `latestArgs`, which definitely\n        // is the most recent call.\n        return fn(...latestArgs)\n      })\n    }\n    return calling\n  }\n}\n\n/**\n * UIPlugin is the extended version of BasePlugin to incorporate rendering with Preact.\n * Use this for plugins that need a user interface.\n *\n * For plugins without an user interface, see BasePlugin.\n */\nclass UIPlugin<\n  // eslint-disable-next-line no-use-before-define\n  Opts extends UIPluginOptions,\n  M extends Meta,\n  B extends Body,\n  PluginState extends Record<string, unknown> = Record<string, unknown>,\n> extends BasePlugin<Opts, M, B, PluginState> {\n  #updateUI!: (state: Partial<State<M, B>>) => void\n\n  isTargetDOMEl!: boolean\n\n  el!: HTMLElement | null\n\n  parent: unknown\n\n  title!: string\n\n  getTargetPlugin<Me extends Meta, Bo extends Body>(\n    target: PluginTarget<Me, Bo>, // eslint-disable-line no-use-before-define\n  ): UIPlugin<any, Me, Bo> | undefined {\n    let targetPlugin\n    if (typeof (target as UIPlugin<any, any, any>)?.addTarget === 'function') {\n      // Targeting a plugin *instance*\n      targetPlugin = target as UIPlugin<any, any, any>\n      if (!(targetPlugin instanceof UIPlugin)) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          new Error(\n            'The provided plugin is not an instance of UIPlugin. This is an indication of a bug with the way Uppy is bundled.',\n            { cause: { targetPlugin, UIPlugin } },\n          ),\n        )\n      }\n    } else if (typeof target === 'function') {\n      // Targeting a plugin type\n      const Target = target\n      // Find the target plugin instance.\n      this.uppy.iteratePlugins((p) => {\n        if (p instanceof Target) {\n          targetPlugin = p\n        }\n      })\n    }\n\n    return targetPlugin\n  }\n\n  /**\n   * Check if supplied `target` is a DOM element or an `object`.\n   * If it’s an object — target is a plugin, and we search `plugins`\n   * for a plugin with same name and return its target.\n   */\n  mount<Me extends Meta, Bo extends Body>(\n    target: PluginTarget<Me, Bo>, // eslint-disable-line no-use-before-define\n    plugin: UIPlugin<any, Me, Bo>,\n  ): HTMLElement {\n    const callerPluginName = plugin.id\n\n    const targetElement = findDOMElement(target)\n\n    if (targetElement) {\n      this.isTargetDOMEl = true\n      // When target is <body> with a single <div> element,\n      // Preact thinks it’s the Uppy root element in there when doing a diff,\n      // and destroys it. So we are creating a fragment (could be empty div)\n      const uppyRootElement = document.createElement('div')\n      uppyRootElement.classList.add('uppy-Root')\n\n      // API for plugins that require a synchronous rerender.\n      this.#updateUI = debounce((state) => {\n        // plugin could be removed, but this.rerender is debounced below,\n        // so it could still be called even after uppy.removePlugin or uppy.destroy\n        // hence the check\n        if (!this.uppy.getPlugin(this.id)) return\n        render(this.render(state, uppyRootElement), uppyRootElement)\n        this.afterUpdate()\n      })\n\n      this.uppy.log(\n        `Installing ${callerPluginName} to a DOM element '${target}'`,\n      )\n\n      if (this.opts.replaceTargetContent) {\n        // Doing render(h(null), targetElement), which should have been\n        // a better way, since because the component might need to do additional cleanup when it is removed,\n        // stopped working — Preact just adds null into target, not replacing\n        targetElement.innerHTML = ''\n      }\n\n      render(\n        this.render(this.uppy.getState(), uppyRootElement),\n        uppyRootElement,\n      )\n      this.el = uppyRootElement\n      targetElement.appendChild(uppyRootElement)\n\n      // Set the text direction if the page has not defined one.\n      uppyRootElement.dir =\n        this.opts.direction || getTextDirection(uppyRootElement) || 'ltr'\n\n      this.onMount()\n\n      return this.el!\n    }\n\n    const targetPlugin = this.getTargetPlugin(target)\n\n    if (targetPlugin) {\n      this.uppy.log(`Installing ${callerPluginName} to ${targetPlugin.id}`)\n      this.parent = targetPlugin\n      this.el = targetPlugin.addTarget(plugin)\n\n      this.onMount()\n      return this.el!\n    }\n\n    this.uppy.log(`Not installing ${callerPluginName}`)\n\n    let message = `Invalid target option given to ${callerPluginName}.`\n    if (typeof target === 'function') {\n      message +=\n        ' The given target is not a Plugin class. ' +\n        \"Please check that you're not specifying a React Component instead of a plugin. \" +\n        'If you are using @uppy/* packages directly, make sure you have only 1 version of @uppy/core installed: ' +\n        'run `npm ls @uppy/core` on the command line and verify that all the versions match and are deduped correctly.'\n    } else {\n      message +=\n        'If you meant to target an HTML element, please make sure that the element exists. ' +\n        'Check that the <script> tag initializing Uppy is right before the closing </body> tag at the end of the page. ' +\n        '(see https://github.com/transloadit/uppy/issues/1042)\\n\\n' +\n        'If you meant to target a plugin, please confirm that your `import` statements or `require` calls are correct.'\n    }\n    throw new Error(message)\n  }\n\n  /**\n   * Called when plugin is mounted, whether in DOM or into another plugin.\n   * Needed because sometimes plugins are mounted separately/after `install`,\n   * so this.el and this.parent might not be available in `install`.\n   * This is the case with @uppy/react plugins, for example.\n   */\n  render(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    state: Record<string, unknown>,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    container?: HTMLElement,\n  ): any {\n    throw new Error(\n      'Extend the render method to add your plugin to a DOM element',\n    )\n  }\n\n  update(state: Partial<State<M, B>>): void {\n    if (this.el != null) {\n      this.#updateUI?.(state)\n    }\n  }\n\n  unmount(): void {\n    if (this.isTargetDOMEl) {\n      this.el?.remove()\n    }\n    this.onUnmount()\n  }\n\n  onMount(): void {}\n\n  onUnmount(): void {}\n}\n\nexport default UIPlugin\n\nexport type PluginTarget<M extends Meta, B extends Body> =\n  | string\n  | Element\n  | typeof BasePlugin\n  | typeof UIPlugin\n  | BasePlugin<any, M, B>\n\nexport interface UIPluginOptions extends PluginOpts {\n  target?: PluginTarget<any, any>\n  replaceTargetContent?: boolean\n  direction?: 'ltr' | 'rtl'\n}\n"],"mappings":"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","ignoreList":[]}