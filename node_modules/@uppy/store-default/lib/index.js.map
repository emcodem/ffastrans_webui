{"version":3,"names":["packageJson","_callbacks","_classPrivateFieldLooseKey","_publish","DefaultStore","constructor","Object","defineProperty","value","_publish2","state","writable","Set","getState","setState","patch","prevState","nextState","_classPrivateFieldLooseBase","subscribe","listener","add","delete","_len","arguments","length","args","Array","_key","forEach","VERSION","version"],"sources":["index.ts"],"sourcesContent":["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore We don't want TS to generate types for the package.json\nimport packageJson from '../package.json'\n\nexport type GenericState = Record<string, unknown>\n\nexport type Listener<T> = (\n  prevState: T,\n  nextState: T,\n  patch?: Partial<T>,\n) => void\n\nexport interface Store<T extends GenericState> {\n  getState: () => T\n\n  setState(patch?: Partial<T>): void\n\n  subscribe(listener: Listener<T>): () => void\n}\n\n/**\n * Default store that keeps state in a simple object.\n */\nclass DefaultStore<T extends GenericState = GenericState> implements Store<T> {\n  static VERSION = packageJson.version\n\n  public state: T = {} as T\n\n  #callbacks = new Set<Listener<T>>()\n\n  getState(): T {\n    return this.state\n  }\n\n  setState(patch?: Partial<T>): void {\n    const prevState = { ...this.state }\n    const nextState = { ...this.state, ...patch }\n\n    this.state = nextState\n    this.#publish(prevState, nextState, patch)\n  }\n\n  subscribe(listener: Listener<T>): () => void {\n    this.#callbacks.add(listener)\n    return () => {\n      this.#callbacks.delete(listener)\n    }\n  }\n\n  #publish(...args: Parameters<Listener<T>>): void {\n    this.#callbacks.forEach((listener) => {\n      listener(...args)\n    })\n  }\n}\n\nexport default DefaultStore\n"],"mappings":";;;AAAA;AACA;AAAA,MACOA,WAAW;EAAA;AAAA;AAAA,IAAAC,UAAA,gBAAAC,0BAAA;AAAA,IAAAC,QAAA,gBAAAD,0BAAA;AAkBlB;AACA;AACA;AACA,MAAME,YAAY,CAA4D;EAAAC,YAAA;IAAAC,MAAA,CAAAC,cAAA,OAAAJ,QAAA;MAAAK,KAAA,EAAAC;IAAA;IAAA,KAGrEC,KAAK,GAAM,CAAC,CAAC;IAAAJ,MAAA,CAAAC,cAAA,OAAAN,UAAA;MAAAU,QAAA;MAAAH,KAAA,EAEP,IAAII,GAAG,CAAc;IAAC;EAAA;EAEnCC,QAAQA,CAAA,EAAM;IACZ,OAAO,IAAI,CAACH,KAAK;EACnB;EAEAI,QAAQA,CAACC,KAAkB,EAAQ;IACjC,MAAMC,SAAS,GAAG;MAAE,GAAG,IAAI,CAACN;IAAM,CAAC;IACnC,MAAMO,SAAS,GAAG;MAAE,GAAG,IAAI,CAACP,KAAK;MAAE,GAAGK;IAAM,CAAC;IAE7C,IAAI,CAACL,KAAK,GAAGO,SAAS;IACtBC,2BAAA,KAAI,EAAAf,QAAA,EAAAA,QAAA,EAAUa,SAAS,EAAEC,SAAS,EAAEF,KAAK;EAC3C;EAEAI,SAASA,CAACC,QAAqB,EAAc;IAC3CF,2BAAA,KAAI,EAAAjB,UAAA,EAAAA,UAAA,EAAYoB,GAAG,CAACD,QAAQ,CAAC;IAC7B,OAAO,MAAM;MACXF,2BAAA,KAAI,EAAAjB,UAAA,EAAAA,UAAA,EAAYqB,MAAM,CAACF,QAAQ,CAAC;IAClC,CAAC;EACH;AAOF;AAAC,SAAAX,UAAA,EALkD;EAAA,SAAAc,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAArCC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;EAAA;EACdV,2BAAA,KAAI,EAAAjB,UAAA,EAAAA,UAAA,EAAY4B,OAAO,CAAET,QAAQ,IAAK;IACpCA,QAAQ,CAAC,GAAGM,IAAI,CAAC;EACnB,CAAC,CAAC;AACJ;AA9BItB,YAAY,CACT0B,OAAO,GAAG9B,WAAW,CAAC+B,OAAO;AAgCtC,eAAe3B,YAAY","ignoreList":[]}