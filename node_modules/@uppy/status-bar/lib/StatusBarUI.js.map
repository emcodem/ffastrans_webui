{"version":3,"names":["h","classNames","statusBarStates","calculateProcessingProgress","UploadBtn","RetryBtn","CancelBtn","PauseResumeButton","DoneBtn","ProgressBarProcessing","ProgressBarError","ProgressBarUploading","ProgressBarComplete","STATE_ERROR","STATE_WAITING","STATE_PREPROCESSING","STATE_UPLOADING","STATE_POSTPROCESSING","STATE_COMPLETE","StatusBarUI","_ref","newFiles","allowNewUpload","isUploadInProgress","isAllPaused","resumableUploads","error","hideUploadButton","undefined","hidePauseResumeButton","hideCancelButton","hideRetryButton","recoveredState","uploadState","totalProgress","files","supportsUploadProgress","hideAfterFinish","isSomeGhost","doneButtonHandler","isUploadStarted","i18n","startUpload","uppy","isAllComplete","showProgressDetails","numUploads","complete","totalSize","totalETA","totalUploadedSize","getProgressValue","progress","mode","value","getIsIndeterminate","progressValue","width","showUploadBtn","showCancelBtn","showPauseResumeBtn","showRetryBtn","showDoneBtn","progressClassNames","statusBarClassNames","progressBarStateEl","atLeastOneAction","thereIsNothingInside","isHidden","className","style","role"],"sources":["StatusBarUI.tsx"],"sourcesContent":["import type { Body, Meta, UppyFile } from '@uppy/utils/lib/UppyFile'\nimport type { I18n } from '@uppy/utils/lib/Translator'\nimport type { Uppy, State } from '@uppy/core/lib/Uppy.js'\nimport { h } from 'preact'\nimport classNames from 'classnames'\nimport statusBarStates from './StatusBarStates.ts'\nimport calculateProcessingProgress from './calculateProcessingProgress.ts'\n\nimport {\n  UploadBtn,\n  RetryBtn,\n  CancelBtn,\n  PauseResumeButton,\n  DoneBtn,\n  ProgressBarProcessing,\n  ProgressBarError,\n  ProgressBarUploading,\n  ProgressBarComplete,\n} from './Components.tsx'\n\nconst {\n  STATE_ERROR,\n  STATE_WAITING,\n  STATE_PREPROCESSING,\n  STATE_UPLOADING,\n  STATE_POSTPROCESSING,\n  STATE_COMPLETE,\n} = statusBarStates\n\nexport interface StatusBarUIProps<M extends Meta, B extends Body> {\n  newFiles: number\n  allowNewUpload: boolean\n  isUploadInProgress: boolean\n  isAllPaused: boolean\n  resumableUploads: boolean\n  error: any\n  hideUploadButton?: boolean\n  hidePauseResumeButton?: boolean\n  hideCancelButton?: boolean\n  hideRetryButton?: boolean\n  recoveredState: State<M, B>['recoveredState']\n  uploadState: (typeof statusBarStates)[keyof typeof statusBarStates]\n  totalProgress: number\n  files: Record<string, UppyFile<M, B>>\n  supportsUploadProgress: boolean\n  hideAfterFinish?: boolean\n  isSomeGhost: boolean\n  doneButtonHandler?: (() => void) | null\n  isUploadStarted: boolean\n  i18n: I18n\n  startUpload: () => void\n  uppy: Uppy<M, B>\n  isAllComplete: boolean\n  showProgressDetails?: boolean\n  numUploads: number\n  complete: number\n  totalSize: number\n  totalETA: number\n  totalUploadedSize: number\n}\n\nexport default function StatusBarUI<M extends Meta, B extends Body>({\n  newFiles,\n  allowNewUpload,\n  isUploadInProgress,\n  isAllPaused,\n  resumableUploads,\n  error,\n  hideUploadButton = undefined,\n  hidePauseResumeButton = false,\n  hideCancelButton = false,\n  hideRetryButton = false,\n  recoveredState,\n  uploadState,\n  totalProgress,\n  files,\n  supportsUploadProgress,\n  hideAfterFinish = false,\n  isSomeGhost,\n  doneButtonHandler = undefined,\n  isUploadStarted,\n  i18n,\n  startUpload,\n  uppy,\n  isAllComplete,\n  showProgressDetails = undefined,\n  numUploads,\n  complete,\n  totalSize,\n  totalETA,\n  totalUploadedSize,\n}: StatusBarUIProps<M, B>) {\n  function getProgressValue(): number | null {\n    switch (uploadState) {\n      case STATE_POSTPROCESSING:\n      case STATE_PREPROCESSING: {\n        const progress = calculateProcessingProgress(files)\n\n        if (progress.mode === 'determinate') {\n          return progress.value * 100\n        }\n        return totalProgress\n      }\n      case STATE_ERROR: {\n        return null\n      }\n      case STATE_UPLOADING: {\n        if (!supportsUploadProgress) {\n          return null\n        }\n        return totalProgress\n      }\n      default:\n        return totalProgress\n    }\n  }\n\n  function getIsIndeterminate(): boolean {\n    switch (uploadState) {\n      case STATE_POSTPROCESSING:\n      case STATE_PREPROCESSING: {\n        const { mode } = calculateProcessingProgress(files)\n        return mode === 'indeterminate'\n      }\n      case STATE_UPLOADING: {\n        if (!supportsUploadProgress) {\n          return true\n        }\n        return false\n      }\n      default:\n        return false\n    }\n  }\n\n  const progressValue = getProgressValue()\n\n  const width = progressValue ?? 100\n\n  const showUploadBtn =\n    !error &&\n    newFiles &&\n    ((!isUploadInProgress && !isAllPaused) || recoveredState) &&\n    allowNewUpload &&\n    !hideUploadButton\n\n  const showCancelBtn =\n    !hideCancelButton &&\n    uploadState !== STATE_WAITING &&\n    uploadState !== STATE_COMPLETE\n\n  const showPauseResumeBtn =\n    resumableUploads &&\n    !hidePauseResumeButton &&\n    uploadState === STATE_UPLOADING\n\n  const showRetryBtn = error && !isAllComplete && !hideRetryButton\n\n  const showDoneBtn = doneButtonHandler && uploadState === STATE_COMPLETE\n\n  const progressClassNames = classNames('uppy-StatusBar-progress', {\n    'is-indeterminate': getIsIndeterminate(),\n  })\n\n  const statusBarClassNames = classNames(\n    'uppy-StatusBar',\n    `is-${uploadState}`,\n    { 'has-ghosts': isSomeGhost },\n  )\n\n  const progressBarStateEl = (() => {\n    switch (uploadState) {\n      case STATE_PREPROCESSING:\n      case STATE_POSTPROCESSING:\n        return (\n          <ProgressBarProcessing\n            progress={calculateProcessingProgress(files)}\n          />\n        )\n      case STATE_COMPLETE:\n        return <ProgressBarComplete i18n={i18n} />\n      case STATE_ERROR:\n        return (\n          <ProgressBarError\n            error={error}\n            i18n={i18n}\n            numUploads={numUploads}\n            complete={complete}\n          />\n        )\n      case STATE_UPLOADING:\n        return (\n          <ProgressBarUploading\n            i18n={i18n}\n            supportsUploadProgress={supportsUploadProgress}\n            totalProgress={totalProgress}\n            showProgressDetails={showProgressDetails}\n            isUploadStarted={isUploadStarted}\n            isAllComplete={isAllComplete}\n            isAllPaused={isAllPaused}\n            newFiles={newFiles}\n            numUploads={numUploads}\n            complete={complete}\n            totalUploadedSize={totalUploadedSize}\n            totalSize={totalSize}\n            totalETA={totalETA}\n            startUpload={startUpload}\n          />\n        )\n      default:\n        return null\n    }\n  })()\n\n  const atLeastOneAction =\n    showUploadBtn ||\n    showRetryBtn ||\n    showPauseResumeBtn ||\n    showCancelBtn ||\n    showDoneBtn\n  const thereIsNothingInside = !atLeastOneAction && !progressBarStateEl\n\n  const isHidden =\n    thereIsNothingInside || (uploadState === STATE_COMPLETE && hideAfterFinish)\n\n  return (\n    <div className={statusBarClassNames} aria-hidden={isHidden}>\n      <div\n        className={progressClassNames}\n        style={{ width: `${width}%` }}\n        role=\"progressbar\"\n        aria-label={`${width}%`}\n        aria-valuetext={`${width}%`}\n        aria-valuemin={0}\n        aria-valuemax={100}\n        aria-valuenow={progressValue!}\n      />\n\n      {progressBarStateEl}\n\n      <div className=\"uppy-StatusBar-actions\">\n        {showUploadBtn ?\n          <UploadBtn\n            newFiles={newFiles}\n            isUploadStarted={isUploadStarted}\n            recoveredState={recoveredState}\n            i18n={i18n}\n            isSomeGhost={isSomeGhost}\n            startUpload={startUpload}\n            uploadState={uploadState}\n          />\n        : null}\n\n        {showRetryBtn ?\n          <RetryBtn i18n={i18n} uppy={uppy} />\n        : null}\n\n        {showPauseResumeBtn ?\n          <PauseResumeButton\n            isAllPaused={isAllPaused}\n            i18n={i18n}\n            isAllComplete={isAllComplete}\n            resumableUploads={resumableUploads}\n            uppy={uppy}\n          />\n        : null}\n\n        {showCancelBtn ?\n          <CancelBtn i18n={i18n} uppy={uppy} />\n        : null}\n\n        {showDoneBtn ?\n          <DoneBtn i18n={i18n} doneButtonHandler={doneButtonHandler} />\n        : null}\n      </div>\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]}