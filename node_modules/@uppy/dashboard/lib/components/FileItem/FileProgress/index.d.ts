import type { State, Uppy, UppyFile } from '@uppy/core';
import type { I18n } from '@uppy/utils/lib/Translator';
import type { Body, Meta } from '@uppy/utils/lib/UppyFile';
import { h } from 'preact';
interface Props<M extends Meta, B extends Body> {
    uppy: Uppy<M, B>;
    file: UppyFile<M, B>;
    isUploaded: boolean;
    error: string | false;
    recoveredState: State<M, B>['recoveredState'];
    hideRetryButton: boolean;
    hidePauseResumeButton: boolean;
    hideCancelButton: boolean;
    resumableUploads: boolean;
    individualCancellation: boolean;
    i18n: I18n;
}
export default function FileProgress<M extends Meta, B extends Body>(props: Props<M, B>): h.JSX.Element | null;
export {};
//# sourceMappingURL=index.d.ts.map