{"version":3,"names":["h","RenderMetaFields","props","computedMetaFields","requiredMetaFields","updateMeta","form","formState","fieldCSSClasses","text","map","field","id","required","includes","key","className","htmlFor","name","render","undefined","value","onChange","newVal","type","placeholder","onInput","ev","target"],"sources":["RenderMetaFields.tsx"],"sourcesContent":["import { h } from 'preact'\n\ntype $TSFixMe = any\n\nexport default function RenderMetaFields(props: $TSFixMe) {\n  const {\n    computedMetaFields,\n    requiredMetaFields,\n    updateMeta,\n    form,\n    formState,\n  } = props\n\n  const fieldCSSClasses = {\n    text: 'uppy-u-reset uppy-c-textInput uppy-Dashboard-FileCard-input',\n  }\n\n  return computedMetaFields.map((field: $TSFixMe) => {\n    const id = `uppy-Dashboard-FileCard-input-${field.id}`\n    const required = requiredMetaFields.includes(field.id)\n    return (\n      <fieldset key={field.id} className=\"uppy-Dashboard-FileCard-fieldset\">\n        <label className=\"uppy-Dashboard-FileCard-label\" htmlFor={id}>\n          {field.name}\n        </label>\n        {field.render !== undefined ?\n          field.render(\n            {\n              value: formState[field.id],\n              onChange: (newVal: $TSFixMe) => updateMeta(newVal, field.id),\n              fieldCSSClasses,\n              required,\n              form: form.id,\n            },\n            h,\n          )\n        : <input\n            className={fieldCSSClasses.text}\n            id={id}\n            form={form.id}\n            type={field.type || 'text'}\n            required={required}\n            value={formState[field.id]}\n            placeholder={field.placeholder}\n            onInput={(ev) =>\n              updateMeta((ev.target as HTMLInputElement).value, field.id)\n            }\n            data-uppy-super-focusable\n          />\n        }\n      </fieldset>\n    )\n  })\n}\n"],"mappings":"AAAA,SAASA,CAAC,QAAQ,QAAQ;AAI1B,eAAe,SAASC,gBAAgBA,CAACC,KAAe,EAAE;EACxD,MAAM;IACJC,kBAAkB;IAClBC,kBAAkB;IAClBC,UAAU;IACVC,IAAI;IACJC;EACF,CAAC,GAAGL,KAAK;EAET,MAAMM,eAAe,GAAG;IACtBC,IAAI,EAAE;EACR,CAAC;EAED,OAAON,kBAAkB,CAACO,GAAG,CAAEC,KAAe,IAAK;IACjD,MAAMC,EAAE,GAAG,iCAAiCD,KAAK,CAACC,EAAE,EAAE;IACtD,MAAMC,QAAQ,GAAGT,kBAAkB,CAACU,QAAQ,CAACH,KAAK,CAACC,EAAE,CAAC;IACtD,OACEZ,CAAA;MAAUe,GAAG,EAAEJ,KAAK,CAACC,EAAG;MAACI,SAAS,EAAC;IAAkC,GACnEhB,CAAA;MAAOgB,SAAS,EAAC,+BAA+B;MAACC,OAAO,EAAEL;IAAG,GAC1DD,KAAK,CAACO,IACF,CAAC,EACPP,KAAK,CAACQ,MAAM,KAAKC,SAAS,GACzBT,KAAK,CAACQ,MAAM,CACV;MACEE,KAAK,EAAEd,SAAS,CAACI,KAAK,CAACC,EAAE,CAAC;MAC1BU,QAAQ,EAAGC,MAAgB,IAAKlB,UAAU,CAACkB,MAAM,EAAEZ,KAAK,CAACC,EAAE,CAAC;MAC5DJ,eAAe;MACfK,QAAQ;MACRP,IAAI,EAAEA,IAAI,CAACM;IACb,CAAC,EACDZ,CACF,CAAC,GACDA,CAAA;MACEgB,SAAS,EAAER,eAAe,CAACC,IAAK;MAChCG,EAAE,EAAEA,EAAG;MACPN,IAAI,EAAEA,IAAI,CAACM,EAAG;MACdY,IAAI,EAAEb,KAAK,CAACa,IAAI,IAAI,MAAO;MAC3BX,QAAQ,EAAEA,QAAS;MACnBQ,KAAK,EAAEd,SAAS,CAACI,KAAK,CAACC,EAAE,CAAE;MAC3Ba,WAAW,EAAEd,KAAK,CAACc,WAAY;MAC/BC,OAAO,EAAGC,EAAE,IACVtB,UAAU,CAAEsB,EAAE,CAACC,MAAM,CAAsBP,KAAK,EAAEV,KAAK,CAACC,EAAE,CAC3D;MACD;IAAyB,CAC1B,CAEK,CAAC;EAEf,CAAC,CAAC;AACJ","ignoreList":[]}