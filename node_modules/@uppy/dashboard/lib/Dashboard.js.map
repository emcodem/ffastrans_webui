{"version":3,"names":["UIPlugin","StatusBar","Informer","ThumbnailGenerator","findAllDOMElements","toArray","getDroppedFiles","defaultPickerIcon","nanoid","memoizeOne","trapFocus","createSuperFocus","DashboardUI","packageJson","locale","memoize","default","TAB_KEY","ESC_KEY","createPromise","o","promise","Promise","resolve","reject","defaultOptions","target","metaFields","thumbnailWidth","thumbnailType","waitForThumbnailsBeforeUpload","showLinkToFileUploadResult","showProgressDetails","hideUploadButton","hideCancelButton","hideRetryButton","hidePauseResumeButton","hideProgressAfterFinish","note","singleFileFullScreen","disableStatusBar","disableInformer","disableThumbnailGenerator","fileManagerSelectionType","proudlyDisplayPoweredByUppy","showSelectedFiles","showRemoveButtonAfterComplete","showNativePhotoCameraButton","showNativeVideoCameraButton","theme","autoOpen","disabled","disableLocalFiles","nativeCameraFacingMode","onDragLeave","onDragOver","onDrop","plugins","doneButtonHandler","undefined","onRequestCloseModal","inline","animateOpenClose","browserBackButtonClose","closeAfterFinish","closeModalOnClickOutside","disablePageScrollWhenModalOpen","trigger","width","height","_disabledNodes","_classPrivateFieldLooseKey","_generateLargeThumbnailIfSingleFile","_openFileEditorWhenFilesAdded","_attachRenderFunctionToTarget","_isTargetSupported","_getAcquirers","_getProgressIndicators","_getEditors","_addSpecifiedPluginsFromOptions","_autoDiscoverPlugins","_addSupportedPluginIfNoTarget","_getStatusBarOpts","_getThumbnailGeneratorOpts","_getInformerOpts","_getStatusBarId","_getThumbnailGeneratorId","_getInformerId","Dashboard","constructor","uppy","opts","_opts$autoOpen","_this$opts","_this$opts$onRequestC","Object","defineProperty","value","_getInformerId2","_getThumbnailGeneratorId2","_getStatusBarId2","_getInformerOpts2","_getThumbnailGeneratorOpts2","_getStatusBarOpts2","writable","modalName","superFocus","ifFocusedOnUppyRecently","removeTarget","plugin","pluginState","getPluginState","newTargets","targets","filter","id","setPluginState","addTarget","callerPluginId","name","callerPluginName","title","callerPluginType","type","msg","log","state","slice","push","el","hideAllPanels","_state$activePickerPa","update","activePickerPanel","showAddFilesPanel","activeOverlayType","fileCardFor","showFileEditor","emit","showPanel","find","canEditFile","file","editors","_classPrivateFieldLooseBase","some","getPlugin","openFileEditor","forEach","editor","selectFile","closeFileEditor","isMetaEditorEnabled","length","saveFileEditor","save","openModal","savedScrollPosition","window","pageYOffset","savedActiveElement","document","activeElement","body","classList","add","isClosing","handler","isHidden","removeEventListener","addEventListener","updateBrowserHistory","handleKeyDownInModal","closeModal","_opts$manualClose","manualClose","remove","cancel","focus","_history$state","history","back","isModalOpen","requestCloseModal","setDarkModeCapability","isDarkModeOn","capabilities","getState","setState","darkMode","handleSystemDarkModeChange","event","isDarkModeOnNow","matches","toggleFileCard","show","fileID","getFile","toggleAddFilesPanel","addFiles","files","descriptors","map","source","data","meta","relativePath","webkitRelativePath","err","startListeningToResize","resizeObserver","ResizeObserver","entries","uppyDashboardInnerEl","contentRect","containerWidth","containerHeight","areInsidesReadyToBeVisible","observe","querySelector","makeDashboardInsidesVisibleAnywayTimeout","setTimeout","isModalAndClosed","stopListeningToResize","disconnect","clearTimeout","recordIfFocusedOnUppyRecently","contains","disableInteractiveElements","disable","_classPrivateFieldLoo","NODES_TO_DISABLE","nodesToDisable","querySelectorAll","node","tagName","setAttribute","dashboardIsDisabled","_history$state2","pushState","handlePopState","_event$state","keyCode","forModal","handleClickOutside","handlePaste","iteratePlugins","handleRootPaste","clipboardData","handleInputChange","preventDefault","currentTarget","handleDragOver","stopPropagation","canSomePluginHandleRootDrop","somePluginCanHandleRootDrop","canHandleRootDrop","doesEventHaveFiles","types","dataTransfer","hasFiles","allowNewUpload","dropEffect","isDraggingOver","handleDragLeave","handleDrop","handleRootDrop","executedDropErrorOnce","logDropError","error","info","message","handleRequestThumbnail","handleCancelThumbnail","handleKeyDownInInline","forInline","handlePasteOnBody","isFocusInOverlay","handleComplete","_ref","failed","handleCancelRestore","LARGE_THUMBNAIL","getFiles","thumbnailGenerator","setOptions","fileForThumbnail","preview","requestThumbnail","then","firstFile","isImageEditorEnabled","initEvents","showModalTrigger","on","removeEvents","off","superFocusOnEachUpdate","isFocusInUppy","isFocusNowhere","isInformerHidden","isModal","afterUpdate","saveFileCard","setFileMeta","icon","render","isSupported","newFiles","uploadStartedFiles","completeFiles","erroredFiles","inProgressFiles","inProgressNotPausedFiles","processingFiles","isUploadStarted","isAllComplete","isAllPaused","getObjectOfFilesPerState","acquirers","progressindicators","indexOf","console","warn","totalFileCount","keys","totalProgress","direction","autoProceed","i18n","i18nArray","recoveredState","resumableUploads","individualCancellation","isMobileDevice","parentElement","allowedFileTypes","restrictions","maxNumberOfFiles","requiredMetaFields","pluginID","mount","_plugin$opts","typesAllowed","includes","pluginAlreadyAdded","installedPlugin","install","Error","allowMultipleUploads","allowMultipleUploadBatches","use","darkModeMediaQuery","matchMedia","isDarkModeOnFromTheStart","_this$darkModeMediaQu","addListener","uninstall","informer","removePlugin","statusBar","thumbnail","unmount","_this$darkModeMediaQu2","removeListener","defaultLocale","clear","i18nInit","_this$uppy$getPlugin","_this$uppy$getPlugin2","l","hideAfterFinish","thumbnailHeight","lazy","VERSION","version"],"sources":["Dashboard.tsx"],"sourcesContent":["import {\n  UIPlugin,\n  type UIPluginOptions,\n  type UnknownPlugin,\n  type Uppy,\n  type UploadResult,\n  type State,\n} from '@uppy/core'\nimport type { ComponentChild, VNode } from 'preact'\nimport type { DefinePluginOpts } from '@uppy/core/lib/BasePlugin.js'\nimport type { Body, Meta, UppyFile } from '@uppy/utils/lib/UppyFile'\nimport StatusBar from '@uppy/status-bar'\nimport Informer from '@uppy/informer'\nimport ThumbnailGenerator from '@uppy/thumbnail-generator'\nimport findAllDOMElements from '@uppy/utils/lib/findAllDOMElements'\nimport toArray from '@uppy/utils/lib/toArray'\nimport getDroppedFiles from '@uppy/utils/lib/getDroppedFiles'\nimport { defaultPickerIcon } from '@uppy/provider-views'\n\nimport type { TargetedEvent } from 'preact/compat'\nimport { nanoid } from 'nanoid/non-secure'\nimport memoizeOne from 'memoize-one'\nimport * as trapFocus from './utils/trapFocus.ts'\nimport createSuperFocus from './utils/createSuperFocus.ts'\nimport DashboardUI from './components/Dashboard.tsx'\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore We don't want TS to generate types for the package.json\nimport packageJson from '../package.json'\nimport locale from './locale.ts'\n\ntype GenericEventCallback = () => void\nexport type DashboardFileEditStartCallback<M extends Meta, B extends Body> = (\n  file?: UppyFile<M, B>,\n) => void\nexport type DashboardFileEditCompleteCallback<\n  M extends Meta,\n  B extends Body,\n> = (file?: UppyFile<M, B>) => void\nexport type DashboardShowPlanelCallback = (id: string) => void\ndeclare module '@uppy/core' {\n  export interface UppyEventMap<M extends Meta, B extends Body> {\n    'dashboard:modal-open': GenericEventCallback\n    'dashboard:modal-closed': GenericEventCallback\n    'dashboard:show-panel': DashboardShowPlanelCallback\n    'dashboard:file-edit-start': DashboardFileEditStartCallback<M, B>\n    'dashboard:file-edit-complete': DashboardFileEditCompleteCallback<M, B>\n    'dashboard:close-panel': (id: string | undefined) => void\n    'restore-canceled': GenericEventCallback\n  }\n}\n\ninterface PromiseWithResolvers<T> {\n  promise: Promise<T>\n  resolve: (value: T | PromiseLike<T>) => void\n  reject: (reason?: any) => void\n}\n\nconst memoize = ((memoizeOne as any).default as false) || memoizeOne\n\nconst TAB_KEY = 9\nconst ESC_KEY = 27\n\nfunction createPromise<T>(): PromiseWithResolvers<T> {\n  const o = {} as PromiseWithResolvers<T>\n  o.promise = new Promise<T>((resolve, reject) => {\n    o.resolve = resolve\n    o.reject = reject\n  })\n  return o\n}\n\ntype FieldRenderOptions = {\n  value: string\n  onChange: (newVal: string) => void\n  fieldCSSClasses: { text: string }\n  required: boolean\n  form: string\n}\n\ntype PreactRender = (\n  node: any,\n  params: Record<string, unknown> | null,\n  ...children: any[]\n) => VNode<any>\n\ninterface MetaField {\n  id: string\n  name: string\n  placeholder?: string\n  render?: (field: FieldRenderOptions, h: PreactRender) => VNode<any>\n}\n\ninterface Target {\n  id: string\n  name: string\n  type: string\n}\n\nexport interface TargetWithRender extends Target {\n  icon: () => ComponentChild\n  render: () => ComponentChild\n}\n\nexport interface DashboardState<M extends Meta, B extends Body> {\n  targets: Target[]\n  activePickerPanel: Target | undefined\n  showAddFilesPanel: boolean\n  activeOverlayType: string | null\n  fileCardFor: string | null\n  showFileEditor: boolean\n  metaFields?: MetaField[] | ((file: UppyFile<M, B>) => MetaField[])\n  isHidden: boolean\n  isClosing: boolean\n  containerWidth: number\n  containerHeight: number\n  areInsidesReadyToBeVisible: boolean\n  isDraggingOver: boolean\n  [key: string]: unknown\n}\n\nexport interface DashboardModalOptions {\n  inline?: false\n  animateOpenClose?: boolean\n  browserBackButtonClose?: boolean\n  closeAfterFinish?: boolean\n  closeModalOnClickOutside?: boolean\n  disablePageScrollWhenModalOpen?: boolean\n}\n\nexport interface DashboardInlineOptions {\n  inline: true\n\n  height?: string | number\n  width?: string | number\n}\n\ninterface DashboardMiscOptions<M extends Meta, B extends Body>\n  extends UIPluginOptions {\n  autoOpen?: 'metaEditor' | 'imageEditor' | null\n  defaultPickerIcon?: typeof defaultPickerIcon\n  disabled?: boolean\n  disableInformer?: boolean\n  disableLocalFiles?: boolean\n  disableStatusBar?: boolean\n  disableThumbnailGenerator?: boolean\n  doneButtonHandler?: null | (() => void)\n  fileManagerSelectionType?: 'files' | 'folders' | 'both'\n  hideCancelButton?: boolean\n  hidePauseResumeButton?: boolean\n  hideProgressAfterFinish?: boolean\n  hideRetryButton?: boolean\n  hideUploadButton?: boolean\n  metaFields?: MetaField[] | ((file: UppyFile<M, B>) => MetaField[])\n  nativeCameraFacingMode?: 'user' | 'environment' | ''\n  note?: string | null\n  onDragLeave?: (event: DragEvent) => void\n  onDragOver?: (event: DragEvent) => void\n  onDrop?: (event: DragEvent) => void\n  onRequestCloseModal?: () => void\n  plugins?: string[]\n  proudlyDisplayPoweredByUppy?: boolean\n  showLinkToFileUploadResult?: boolean\n  showNativePhotoCameraButton?: boolean\n  showNativeVideoCameraButton?: boolean\n  showProgressDetails?: boolean\n  showRemoveButtonAfterComplete?: boolean\n  showSelectedFiles?: boolean\n  singleFileFullScreen?: boolean\n  theme?: 'auto' | 'dark' | 'light'\n  thumbnailHeight?: number\n  thumbnailType?: string\n  thumbnailWidth?: number\n  trigger?: string | Element | null\n  waitForThumbnailsBeforeUpload?: boolean\n}\n\nexport type DashboardOptions<\n  M extends Meta,\n  B extends Body,\n> = DashboardMiscOptions<M, B> &\n  (DashboardModalOptions | DashboardInlineOptions)\n\nconst defaultOptions = {\n  target: 'body',\n  metaFields: [],\n  thumbnailWidth: 280,\n  thumbnailType: 'image/jpeg',\n  waitForThumbnailsBeforeUpload: false,\n  defaultPickerIcon,\n  showLinkToFileUploadResult: false,\n  showProgressDetails: false,\n  hideUploadButton: false,\n  hideCancelButton: false,\n  hideRetryButton: false,\n  hidePauseResumeButton: false,\n  hideProgressAfterFinish: false,\n  note: null,\n  singleFileFullScreen: true,\n  disableStatusBar: false,\n  disableInformer: false,\n  disableThumbnailGenerator: false,\n  fileManagerSelectionType: 'files',\n  proudlyDisplayPoweredByUppy: true,\n  showSelectedFiles: true,\n  showRemoveButtonAfterComplete: false,\n  showNativePhotoCameraButton: false,\n  showNativeVideoCameraButton: false,\n  theme: 'light',\n  autoOpen: null,\n  disabled: false,\n  disableLocalFiles: false,\n  nativeCameraFacingMode: '',\n  onDragLeave: () => {},\n  onDragOver: () => {},\n  onDrop: () => {},\n  plugins: [],\n\n  // Dynamic default options, they have to be defined in the constructor (because\n  // they require access to the `this` keyword), but we still want them to\n  // appear in the default options so TS knows they'll be defined.\n  doneButtonHandler: undefined as any,\n  onRequestCloseModal: null as any,\n\n  // defaultModalOptions\n  inline: false as boolean,\n  animateOpenClose: true,\n  browserBackButtonClose: false,\n  closeAfterFinish: false,\n  closeModalOnClickOutside: false,\n  disablePageScrollWhenModalOpen: true,\n  trigger: null,\n\n  // defaultInlineOptions\n  width: 750,\n  height: 550,\n} satisfies Partial<DashboardOptions<any, any>>\n\n/**\n * Dashboard UI with previews, metadata editing, tabs for various services and more\n */\nexport default class Dashboard<M extends Meta, B extends Body> extends UIPlugin<\n  DefinePluginOpts<\n    // The options object inside the class is not the discriminated union but and intersection of the different subtypes.\n    DashboardMiscOptions<M, B> &\n      Omit<DashboardInlineOptions, 'inline'> &\n      Omit<DashboardModalOptions, 'inline'> & { inline?: boolean },\n    keyof typeof defaultOptions\n  >,\n  M,\n  B,\n  DashboardState<M, B>\n> {\n  static VERSION = packageJson.version\n\n  #disabledNodes!: HTMLElement[] | null\n\n  private modalName = `uppy-Dashboard-${nanoid()}`\n\n  private superFocus = createSuperFocus()\n\n  private ifFocusedOnUppyRecently = false\n\n  private dashboardIsDisabled!: boolean\n\n  private savedScrollPosition!: number\n\n  private savedActiveElement!: HTMLElement\n\n  private resizeObserver!: ResizeObserver\n\n  private darkModeMediaQuery!: MediaQueryList | null\n\n  // Timeouts\n  private makeDashboardInsidesVisibleAnywayTimeout!: ReturnType<\n    typeof setTimeout\n  >\n\n  constructor(uppy: Uppy<M, B>, opts?: DashboardOptions<M, B>) {\n    const autoOpen = opts?.autoOpen ?? null\n    super(uppy, { ...defaultOptions, ...opts, autoOpen })\n    this.id = this.opts.id || 'Dashboard'\n    this.title = 'Dashboard'\n    this.type = 'orchestrator'\n\n    this.defaultLocale = locale\n\n    // Dynamic default options:\n    if (this.opts.doneButtonHandler === undefined) {\n      // `null` means \"do not display a Done button\", while `undefined` means\n      // \"I want the default behavior\". For this reason, we need to differentiate `null` and `undefined`.\n      this.opts.doneButtonHandler = () => {\n        this.uppy.clear()\n        this.requestCloseModal()\n      }\n    }\n    this.opts.onRequestCloseModal ??= () => this.closeModal()\n\n    this.i18nInit()\n  }\n\n  removeTarget = (plugin: UnknownPlugin<M, B>): void => {\n    const pluginState = this.getPluginState()\n    // filter out the one we want to remove\n    const newTargets = pluginState.targets.filter(\n      (target) => target.id !== plugin.id,\n    )\n\n    this.setPluginState({\n      targets: newTargets,\n    })\n  }\n\n  addTarget = (plugin: UnknownPlugin<M, B>): HTMLElement | null => {\n    const callerPluginId = plugin.id || plugin.constructor.name\n    const callerPluginName =\n      (plugin as any as { title: string }).title || callerPluginId\n    const callerPluginType = plugin.type\n\n    if (\n      callerPluginType !== 'acquirer' &&\n      callerPluginType !== 'progressindicator' &&\n      callerPluginType !== 'editor'\n    ) {\n      const msg =\n        'Dashboard: can only be targeted by plugins of types: acquirer, progressindicator, editor'\n      this.uppy.log(msg, 'error')\n      return null\n    }\n\n    const target = {\n      id: callerPluginId,\n      name: callerPluginName,\n      type: callerPluginType,\n    }\n\n    const state = this.getPluginState()\n    const newTargets = state.targets.slice()\n    newTargets.push(target)\n\n    this.setPluginState({\n      targets: newTargets,\n    })\n\n    return this.el\n  }\n\n  hideAllPanels = (): void => {\n    const state = this.getPluginState()\n    const update = {\n      activePickerPanel: undefined,\n      showAddFilesPanel: false,\n      activeOverlayType: null,\n      fileCardFor: null,\n      showFileEditor: false,\n    }\n\n    if (\n      state.activePickerPanel === update.activePickerPanel &&\n      state.showAddFilesPanel === update.showAddFilesPanel &&\n      state.showFileEditor === update.showFileEditor &&\n      state.activeOverlayType === update.activeOverlayType\n    ) {\n      // avoid doing a state update if nothing changed\n      return\n    }\n\n    this.setPluginState(update)\n\n    this.uppy.emit('dashboard:close-panel', state.activePickerPanel?.id)\n  }\n\n  showPanel = (id: string): void => {\n    const { targets } = this.getPluginState()\n\n    const activePickerPanel = targets.find((target) => {\n      return target.type === 'acquirer' && target.id === id\n    })\n\n    this.setPluginState({\n      activePickerPanel,\n      activeOverlayType: 'PickerPanel',\n    })\n\n    this.uppy.emit('dashboard:show-panel', id)\n  }\n\n  private canEditFile = (file: UppyFile<M, B>): boolean => {\n    const { targets } = this.getPluginState()\n    const editors = this.#getEditors(targets)\n\n    return editors.some((target) =>\n      (this.uppy.getPlugin(target.id) as any).canEditFile(file),\n    )\n  }\n\n  openFileEditor = (file: UppyFile<M, B>): void => {\n    const { targets } = this.getPluginState()\n    const editors = this.#getEditors(targets)\n\n    this.setPluginState({\n      showFileEditor: true,\n      fileCardFor: file.id || null,\n      activeOverlayType: 'FileEditor',\n    })\n\n    editors.forEach((editor) => {\n      ;(this.uppy.getPlugin(editor.id) as any).selectFile(file)\n    })\n  }\n\n  closeFileEditor = (): void => {\n    const { metaFields } = this.getPluginState()\n    const isMetaEditorEnabled = metaFields && metaFields.length > 0\n\n    if (isMetaEditorEnabled) {\n      this.setPluginState({\n        showFileEditor: false,\n        activeOverlayType: 'FileCard',\n      })\n    } else {\n      this.setPluginState({\n        showFileEditor: false,\n        fileCardFor: null,\n        activeOverlayType: 'AddFiles',\n      })\n    }\n  }\n\n  saveFileEditor = (): void => {\n    const { targets } = this.getPluginState()\n    const editors = this.#getEditors(targets)\n\n    editors.forEach((editor) => {\n      ;(this.uppy.getPlugin(editor.id) as any).save()\n    })\n\n    this.closeFileEditor()\n  }\n\n  openModal = (): Promise<void> => {\n    const { promise, resolve } = createPromise<void>()\n    // save scroll position\n    this.savedScrollPosition = window.pageYOffset\n    // save active element, so we can restore focus when modal is closed\n    this.savedActiveElement = document.activeElement as HTMLElement\n\n    if (this.opts.disablePageScrollWhenModalOpen) {\n      document.body.classList.add('uppy-Dashboard-isFixed')\n    }\n\n    if (this.opts.animateOpenClose && this.getPluginState().isClosing) {\n      const handler = () => {\n        this.setPluginState({\n          isHidden: false,\n        })\n        this.el!.removeEventListener('animationend', handler, false)\n        resolve()\n      }\n      this.el!.addEventListener('animationend', handler, false)\n    } else {\n      this.setPluginState({\n        isHidden: false,\n      })\n      resolve()\n    }\n\n    if (this.opts.browserBackButtonClose) {\n      this.updateBrowserHistory()\n    }\n\n    // handle ESC and TAB keys in modal dialog\n    document.addEventListener('keydown', this.handleKeyDownInModal)\n\n    this.uppy.emit('dashboard:modal-open')\n\n    return promise\n  }\n\n  closeModal = (opts?: { manualClose: boolean }): void | Promise<void> => {\n    // Whether the modal is being closed by the user (`true`) or by other means (e.g. browser back button)\n    const manualClose = opts?.manualClose ?? true\n\n    const { isHidden, isClosing } = this.getPluginState()\n    if (isHidden || isClosing) {\n      // short-circuit if animation is ongoing\n      return undefined\n    }\n\n    const { promise, resolve } = createPromise<void>()\n\n    if (this.opts.disablePageScrollWhenModalOpen) {\n      document.body.classList.remove('uppy-Dashboard-isFixed')\n    }\n\n    if (this.opts.animateOpenClose) {\n      this.setPluginState({\n        isClosing: true,\n      })\n      const handler = () => {\n        this.setPluginState({\n          isHidden: true,\n          isClosing: false,\n        })\n\n        this.superFocus.cancel()\n        this.savedActiveElement.focus()\n\n        this.el!.removeEventListener('animationend', handler, false)\n        resolve()\n      }\n      this.el!.addEventListener('animationend', handler, false)\n    } else {\n      this.setPluginState({\n        isHidden: true,\n      })\n\n      this.superFocus.cancel()\n      this.savedActiveElement.focus()\n\n      resolve()\n    }\n\n    // handle ESC and TAB keys in modal dialog\n    document.removeEventListener('keydown', this.handleKeyDownInModal)\n\n    if (manualClose) {\n      if (this.opts.browserBackButtonClose) {\n        // Make sure that the latest entry in the history state is our modal name\n        // eslint-disable-next-line no-restricted-globals\n        if (history.state?.[this.modalName]) {\n          // Go back in history to clear out the entry we created (ultimately closing the modal)\n          // eslint-disable-next-line no-restricted-globals\n          history.back()\n        }\n      }\n    }\n\n    this.uppy.emit('dashboard:modal-closed')\n\n    return promise\n  }\n\n  isModalOpen = (): boolean => {\n    return !this.getPluginState().isHidden || false\n  }\n\n  private requestCloseModal = (): void | Promise<void> => {\n    if (this.opts.onRequestCloseModal) {\n      return this.opts.onRequestCloseModal()\n    }\n    return this.closeModal()\n  }\n\n  setDarkModeCapability = (isDarkModeOn: boolean): void => {\n    const { capabilities } = this.uppy.getState()\n    this.uppy.setState({\n      capabilities: {\n        ...capabilities,\n        darkMode: isDarkModeOn,\n      },\n    })\n  }\n\n  private handleSystemDarkModeChange = (event: MediaQueryListEvent) => {\n    const isDarkModeOnNow = event.matches\n    this.uppy.log(`[Dashboard] Dark mode is ${isDarkModeOnNow ? 'on' : 'off'}`)\n    this.setDarkModeCapability(isDarkModeOnNow)\n  }\n\n  private toggleFileCard = (show: boolean, fileID: string) => {\n    const file = this.uppy.getFile(fileID)\n    if (show) {\n      this.uppy.emit('dashboard:file-edit-start', file)\n    } else {\n      this.uppy.emit('dashboard:file-edit-complete', file)\n    }\n\n    this.setPluginState({\n      fileCardFor: show ? fileID : null,\n      activeOverlayType: show ? 'FileCard' : null,\n    })\n  }\n\n  private toggleAddFilesPanel = (show: boolean) => {\n    this.setPluginState({\n      showAddFilesPanel: show,\n      activeOverlayType: show ? 'AddFiles' : null,\n    })\n  }\n\n  addFiles = (files: File[]): void => {\n    const descriptors = files.map((file) => ({\n      source: this.id,\n      name: file.name,\n      type: file.type,\n      data: file,\n      meta: {\n        // path of the file relative to the ancestor directory the user selected.\n        // e.g. 'docs/Old Prague/airbnb.pdf'\n        relativePath:\n          (file as any).relativePath || file.webkitRelativePath || null,\n      } as any as M,\n    }))\n\n    try {\n      this.uppy.addFiles(descriptors)\n    } catch (err) {\n      this.uppy.log(err as any)\n    }\n  }\n\n  // ___Why make insides of Dashboard invisible until first ResizeObserver event is emitted?\n  //    ResizeOberserver doesn't emit the first resize event fast enough, users can see the jump from one .uppy-size-- to\n  //    another (e.g. in Safari)\n  // ___Why not apply visibility property to .uppy-Dashboard-inner?\n  //    Because ideally, acc to specs, ResizeObserver should see invisible elements as of width 0. So even though applying\n  //    invisibility to .uppy-Dashboard-inner works now, it may not work in the future.\n  private startListeningToResize = () => {\n    // Watch for Dashboard container (`.uppy-Dashboard-inner`) resize\n    // and update containerWidth/containerHeight in plugin state accordingly.\n    // Emits first event on initialization.\n    this.resizeObserver = new ResizeObserver((entries) => {\n      const uppyDashboardInnerEl = entries[0]\n      const { width, height } = uppyDashboardInnerEl.contentRect\n\n      this.setPluginState({\n        containerWidth: width,\n        containerHeight: height,\n        areInsidesReadyToBeVisible: true,\n      })\n    })\n    this.resizeObserver.observe(\n      this.el!.querySelector('.uppy-Dashboard-inner')!,\n    )\n\n    // If ResizeObserver fails to emit an event telling us what size to use - default to the mobile view\n    this.makeDashboardInsidesVisibleAnywayTimeout = setTimeout(() => {\n      const pluginState = this.getPluginState()\n      const isModalAndClosed = !this.opts.inline && pluginState.isHidden\n      if (\n        // We might want to enable this in the future\n\n        // if ResizeObserver hasn't yet fired,\n        !pluginState.areInsidesReadyToBeVisible &&\n        // and it's not due to the modal being closed\n        !isModalAndClosed\n      ) {\n        this.uppy.log(\n          '[Dashboard] resize event didn’t fire on time: defaulted to mobile layout',\n          'warning',\n        )\n\n        this.setPluginState({\n          areInsidesReadyToBeVisible: true,\n        })\n      }\n    }, 1000)\n  }\n\n  private stopListeningToResize = () => {\n    this.resizeObserver.disconnect()\n\n    clearTimeout(this.makeDashboardInsidesVisibleAnywayTimeout)\n  }\n\n  // Records whether we have been interacting with uppy right now,\n  // which is then used to determine whether state updates should trigger a refocusing.\n  private recordIfFocusedOnUppyRecently = (event: Event) => {\n    if (this.el!.contains(event.target as HTMLElement)) {\n      this.ifFocusedOnUppyRecently = true\n    } else {\n      this.ifFocusedOnUppyRecently = false\n      // ___Why run this.superFocus.cancel here when it already runs in superFocusOnEachUpdate?\n      //    Because superFocus is debounced, when we move from Uppy to some other element on the page,\n      //    previously run superFocus sometimes hits and moves focus back to Uppy.\n      this.superFocus.cancel()\n    }\n  }\n\n  private disableInteractiveElements = (disable: boolean) => {\n    const NODES_TO_DISABLE = [\n      'a[href]',\n      'input:not([disabled])',\n      'select:not([disabled])',\n      'textarea:not([disabled])',\n      'button:not([disabled])',\n      '[role=\"button\"]:not([disabled])',\n    ]\n\n    const nodesToDisable =\n      this.#disabledNodes ??\n      toArray(this.el!.querySelectorAll(NODES_TO_DISABLE as any)).filter(\n        (node) => !node.classList.contains('uppy-Dashboard-close'),\n      )\n\n    for (const node of nodesToDisable) {\n      // Links can’t have `disabled` attr, so we use `aria-disabled` for a11y\n      if (node.tagName === 'A') {\n        node.setAttribute('aria-disabled', disable)\n      } else {\n        node.disabled = disable\n      }\n    }\n\n    if (disable) {\n      this.#disabledNodes = nodesToDisable\n    } else {\n      this.#disabledNodes = null\n    }\n\n    this.dashboardIsDisabled = disable\n  }\n\n  private updateBrowserHistory = () => {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    // eslint-disable-next-line no-restricted-globals\n    if (!history.state?.[this.modalName]) {\n      // Push to history so that the page is not lost on browser back button press\n      // eslint-disable-next-line no-restricted-globals\n      history.pushState(\n        {\n          // eslint-disable-next-line no-restricted-globals\n          ...history.state,\n          [this.modalName]: true,\n        },\n        '',\n      )\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopState, false)\n  }\n\n  private handlePopState = (event: PopStateEvent) => {\n    // Close the modal if the history state no longer contains our modal name\n    if (this.isModalOpen() && (!event.state || !event.state[this.modalName])) {\n      this.closeModal({ manualClose: false })\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry\n    // in the history but the modal is closed, fix the history by removing the\n    // uppy history entry.\n    // This occurs when another entry is added into the history state while the\n    // modal is open, and then the modal gets manually closed.\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (!this.isModalOpen() && event.state?.[this.modalName]) {\n      // eslint-disable-next-line no-restricted-globals\n      history.back()\n    }\n  }\n\n  private handleKeyDownInModal = (event: KeyboardEvent) => {\n    // close modal on esc key press\n    if (event.keyCode === ESC_KEY) this.requestCloseModal()\n    // trap focus on tab key press\n    if (event.keyCode === TAB_KEY)\n      trapFocus.forModal(\n        event,\n        this.getPluginState().activeOverlayType,\n        this.el,\n      )\n  }\n\n  private handleClickOutside = () => {\n    if (this.opts.closeModalOnClickOutside) this.requestCloseModal()\n  }\n\n  private handlePaste = (event: ClipboardEvent) => {\n    // Let any acquirer plugin (Url/Webcam/etc.) handle pastes to the root\n    this.uppy.iteratePlugins((plugin) => {\n      if (plugin.type === 'acquirer') {\n        // Every Plugin with .type acquirer can define handleRootPaste(event)\n        ;(plugin as any).handleRootPaste?.(event)\n      }\n    })\n\n    // Add all dropped files\n    const files = toArray(event.clipboardData!.files)\n    if (files.length > 0) {\n      this.uppy.log('[Dashboard] Files pasted')\n      this.addFiles(files)\n    }\n  }\n\n  private handleInputChange = (\n    event: TargetedEvent<HTMLInputElement, Event>,\n  ) => {\n    event.preventDefault()\n    const files = toArray(event.currentTarget.files || [])\n    if (files.length > 0) {\n      this.uppy.log('[Dashboard] Files selected through input')\n      this.addFiles(files)\n    }\n  }\n\n  private handleDragOver = (event: DragEvent) => {\n    event.preventDefault()\n    event.stopPropagation()\n\n    // Check if some plugin can handle the datatransfer without files —\n    // for instance, the Url plugin can import a url\n    const canSomePluginHandleRootDrop = () => {\n      let somePluginCanHandleRootDrop = true\n      this.uppy.iteratePlugins((plugin) => {\n        if ((plugin as any).canHandleRootDrop?.(event)) {\n          somePluginCanHandleRootDrop = true\n        }\n      })\n      return somePluginCanHandleRootDrop\n    }\n\n    // Check if the \"type\" of the datatransfer object includes files\n    const doesEventHaveFiles = () => {\n      const { types } = event.dataTransfer!\n      return types.some((type) => type === 'Files')\n    }\n\n    // Deny drop, if no plugins can handle datatransfer, there are no files,\n    // or when opts.disabled is set, or new uploads are not allowed\n    const somePluginCanHandleRootDrop = canSomePluginHandleRootDrop()\n    const hasFiles = doesEventHaveFiles()\n    if (\n      (!somePluginCanHandleRootDrop && !hasFiles) ||\n      this.opts.disabled ||\n      // opts.disableLocalFiles should only be taken into account if no plugins\n      // can handle the datatransfer\n      (this.opts.disableLocalFiles &&\n        (hasFiles || !somePluginCanHandleRootDrop)) ||\n      !this.uppy.getState().allowNewUpload\n    ) {\n      event.dataTransfer!.dropEffect = 'none' // eslint-disable-line no-param-reassign\n      return\n    }\n\n    // Add a small (+) icon on drop\n    // (and prevent browsers from interpreting this as files being _moved_ into the\n    // browser, https://github.com/transloadit/uppy/issues/1978).\n    event.dataTransfer!.dropEffect = 'copy' // eslint-disable-line no-param-reassign\n\n    this.setPluginState({ isDraggingOver: true })\n\n    this.opts.onDragOver(event)\n  }\n\n  private handleDragLeave = (event: DragEvent) => {\n    event.preventDefault()\n    event.stopPropagation()\n\n    this.setPluginState({ isDraggingOver: false })\n\n    this.opts.onDragLeave(event)\n  }\n\n  private handleDrop = async (event: DragEvent) => {\n    event.preventDefault()\n    event.stopPropagation()\n\n    this.setPluginState({ isDraggingOver: false })\n\n    // Let any acquirer plugin (Url/Webcam/etc.) handle drops to the root\n    this.uppy.iteratePlugins((plugin) => {\n      if (plugin.type === 'acquirer') {\n        // Every Plugin with .type acquirer can define handleRootDrop(event)\n        ;(plugin as any).handleRootDrop?.(event)\n      }\n    })\n\n    // Add all dropped files\n    let executedDropErrorOnce = false\n    const logDropError = (error: any) => {\n      this.uppy.log(error, 'error')\n\n      // In practice all drop errors are most likely the same,\n      // so let's just show one to avoid overwhelming the user\n      if (!executedDropErrorOnce) {\n        this.uppy.info(error.message, 'error')\n        executedDropErrorOnce = true\n      }\n    }\n\n    this.uppy.log('[Dashboard] Processing dropped files')\n\n    // Add all dropped files\n    const files = await getDroppedFiles(event.dataTransfer!, { logDropError })\n    if (files.length > 0) {\n      this.uppy.log('[Dashboard] Files dropped')\n      this.addFiles(files)\n    }\n\n    this.opts.onDrop(event)\n  }\n\n  private handleRequestThumbnail = (file: UppyFile<M, B>) => {\n    if (!this.opts.waitForThumbnailsBeforeUpload) {\n      this.uppy.emit('thumbnail:request', file)\n    }\n  }\n\n  /**\n   * We cancel thumbnail requests when a file item component unmounts to avoid\n   * clogging up the queue when the user scrolls past many elements.\n   */\n  private handleCancelThumbnail = (file: UppyFile<M, B>) => {\n    if (!this.opts.waitForThumbnailsBeforeUpload) {\n      this.uppy.emit('thumbnail:cancel', file)\n    }\n  }\n\n  private handleKeyDownInInline = (event: KeyboardEvent) => {\n    // Trap focus on tab key press.\n    if (event.keyCode === TAB_KEY)\n      trapFocus.forInline(\n        event,\n        this.getPluginState().activeOverlayType,\n        this.el,\n      )\n  }\n\n  // ___Why do we listen to the 'paste' event on a document instead of onPaste={props.handlePaste} prop,\n  //    or this.el.addEventListener('paste')?\n  //    Because (at least) Chrome doesn't handle paste if focus is on some button, e.g. 'My Device'.\n  //    => Therefore, the best option is to listen to all 'paste' events, and only react to them when we are focused on our\n  //       particular Uppy instance.\n  // ___Why do we still need onPaste={props.handlePaste} for the DashboardUi?\n  //    Because if we click on the 'Drop files here' caption e.g., `document.activeElement` will be 'body'. Which means our\n  //    standard determination of whether we're pasting into our Uppy instance won't work.\n  //    => Therefore, we need a traditional onPaste={props.handlePaste} handler too.\n  private handlePasteOnBody = (event: ClipboardEvent) => {\n    const isFocusInOverlay = this.el!.contains(document.activeElement)\n    if (isFocusInOverlay) {\n      this.handlePaste(event)\n    }\n  }\n\n  private handleComplete = ({ failed }: UploadResult<M, B>) => {\n    if (this.opts.closeAfterFinish && !failed?.length) {\n      // All uploads are done\n      this.requestCloseModal()\n    }\n  }\n\n  private handleCancelRestore = () => {\n    this.uppy.emit('restore-canceled')\n  }\n\n  #generateLargeThumbnailIfSingleFile = () => {\n    if (this.opts.disableThumbnailGenerator) {\n      return\n    }\n\n    const LARGE_THUMBNAIL = 600\n    const files = this.uppy.getFiles()\n\n    if (files.length === 1) {\n      const thumbnailGenerator = this.uppy.getPlugin(\n        `${this.id}:ThumbnailGenerator`,\n      ) as ThumbnailGenerator<M, B> | undefined\n      thumbnailGenerator?.setOptions({ thumbnailWidth: LARGE_THUMBNAIL })\n      const fileForThumbnail = { ...files[0], preview: undefined }\n      thumbnailGenerator?.requestThumbnail(fileForThumbnail).then(() => {\n        thumbnailGenerator?.setOptions({\n          thumbnailWidth: this.opts.thumbnailWidth,\n        })\n      })\n    }\n  }\n\n  #openFileEditorWhenFilesAdded = (files: UppyFile<M, B>[]) => {\n    const firstFile = files[0]\n\n    const { metaFields } = this.getPluginState()\n    const isMetaEditorEnabled = metaFields && metaFields.length > 0\n    const isImageEditorEnabled = this.canEditFile(firstFile)\n\n    if (isMetaEditorEnabled && this.opts.autoOpen === 'metaEditor') {\n      this.toggleFileCard(true, firstFile.id)\n    } else if (isImageEditorEnabled && this.opts.autoOpen === 'imageEditor') {\n      this.openFileEditor(firstFile)\n    }\n  }\n\n  initEvents = (): void => {\n    // Modal open button\n    if (this.opts.trigger && !this.opts.inline) {\n      const showModalTrigger = findAllDOMElements(this.opts.trigger)\n      if (showModalTrigger) {\n        showModalTrigger.forEach((trigger) =>\n          trigger.addEventListener('click', this.openModal),\n        )\n      } else {\n        this.uppy.log(\n          'Dashboard modal trigger not found. Make sure `trigger` is set in Dashboard options, unless you are planning to call `dashboard.openModal()` method yourself',\n          'warning',\n        )\n      }\n    }\n\n    this.startListeningToResize()\n    document.addEventListener('paste', this.handlePasteOnBody)\n\n    this.uppy.on('plugin-added', this.#addSupportedPluginIfNoTarget)\n    this.uppy.on('plugin-remove', this.removeTarget)\n    this.uppy.on('file-added', this.hideAllPanels)\n    this.uppy.on('dashboard:modal-closed', this.hideAllPanels)\n    this.uppy.on('complete', this.handleComplete)\n\n    this.uppy.on('files-added', this.#generateLargeThumbnailIfSingleFile)\n    this.uppy.on('file-removed', this.#generateLargeThumbnailIfSingleFile)\n\n    // ___Why fire on capture?\n    //    Because this.ifFocusedOnUppyRecently needs to change before onUpdate() fires.\n    document.addEventListener('focus', this.recordIfFocusedOnUppyRecently, true)\n    document.addEventListener('click', this.recordIfFocusedOnUppyRecently, true)\n\n    if (this.opts.inline) {\n      this.el!.addEventListener('keydown', this.handleKeyDownInInline)\n    }\n\n    if (this.opts.autoOpen) {\n      this.uppy.on('files-added', this.#openFileEditorWhenFilesAdded)\n    }\n  }\n\n  removeEvents = (): void => {\n    const showModalTrigger = findAllDOMElements(this.opts.trigger)\n    if (!this.opts.inline && showModalTrigger) {\n      showModalTrigger.forEach((trigger) =>\n        trigger.removeEventListener('click', this.openModal),\n      )\n    }\n\n    this.stopListeningToResize()\n    document.removeEventListener('paste', this.handlePasteOnBody)\n    window.removeEventListener('popstate', this.handlePopState, false)\n\n    this.uppy.off('plugin-added', this.#addSupportedPluginIfNoTarget)\n    this.uppy.off('plugin-remove', this.removeTarget)\n    this.uppy.off('file-added', this.hideAllPanels)\n    this.uppy.off('dashboard:modal-closed', this.hideAllPanels)\n    this.uppy.off('complete', this.handleComplete)\n\n    this.uppy.off('files-added', this.#generateLargeThumbnailIfSingleFile)\n    this.uppy.off('file-removed', this.#generateLargeThumbnailIfSingleFile)\n\n    document.removeEventListener('focus', this.recordIfFocusedOnUppyRecently)\n    document.removeEventListener('click', this.recordIfFocusedOnUppyRecently)\n\n    if (this.opts.inline) {\n      this.el!.removeEventListener('keydown', this.handleKeyDownInInline)\n    }\n\n    if (this.opts.autoOpen) {\n      this.uppy.off('files-added', this.#openFileEditorWhenFilesAdded)\n    }\n  }\n\n  private superFocusOnEachUpdate = () => {\n    const isFocusInUppy = this.el!.contains(document.activeElement)\n    // When focus is lost on the page (== focus is on body for most browsers, or focus is null for IE11)\n    const isFocusNowhere =\n      document.activeElement === document.body ||\n      document.activeElement === null\n    const isInformerHidden = this.uppy.getState().info.length === 0\n    const isModal = !this.opts.inline\n\n    if (\n      // If update is connected to showing the Informer - let the screen reader calmly read it.\n      isInformerHidden &&\n      // If we are in a modal - always superfocus without concern for other elements\n      // on the page (user is unlikely to want to interact with the rest of the page)\n      (isModal ||\n        // If we are already inside of Uppy, or\n        isFocusInUppy ||\n        // If we are not focused on anything BUT we have already, at least once, focused on uppy\n        //   1. We focus when isFocusNowhere, because when the element we were focused\n        //      on disappears (e.g. an overlay), - focus gets lost. If user is typing\n        //      something somewhere else on the page, - focus won't be 'nowhere'.\n        //   2. We only focus when focus is nowhere AND this.ifFocusedOnUppyRecently,\n        //      to avoid focus jumps if we do something else on the page.\n        //   [Practical check] Without '&& this.ifFocusedOnUppyRecently', in Safari, in inline mode,\n        //                     when file is uploading, - navigate via tab to the checkbox,\n        //                     try to press space multiple times. Focus will jump to Uppy.\n        (isFocusNowhere && this.ifFocusedOnUppyRecently))\n    ) {\n      this.superFocus(this.el, this.getPluginState().activeOverlayType)\n    } else {\n      this.superFocus.cancel()\n    }\n  }\n\n  readonly afterUpdate = (): void => {\n    if (this.opts.disabled && !this.dashboardIsDisabled) {\n      this.disableInteractiveElements(true)\n      return\n    }\n\n    if (!this.opts.disabled && this.dashboardIsDisabled) {\n      this.disableInteractiveElements(false)\n    }\n\n    this.superFocusOnEachUpdate()\n  }\n\n  saveFileCard = (meta: M, fileID: string): void => {\n    this.uppy.setFileMeta(fileID, meta)\n    this.toggleFileCard(false, fileID)\n  }\n\n  #attachRenderFunctionToTarget = (target: Target): TargetWithRender => {\n    const plugin = this.uppy.getPlugin(target.id) as any\n    return {\n      ...target,\n      icon: plugin.icon || this.opts.defaultPickerIcon,\n      render: plugin.render,\n    }\n  }\n\n  #isTargetSupported = (target: Target) => {\n    const plugin = this.uppy.getPlugin(target.id) as any as {\n      isSupported?: () => boolean\n    }\n    // If the plugin does not provide a `supported` check, assume the plugin works everywhere.\n    if (typeof plugin.isSupported !== 'function') {\n      return true\n    }\n    return plugin.isSupported()\n  }\n\n  #getAcquirers = memoize((targets: Target[]) => {\n    return targets\n      .filter(\n        (target) =>\n          target.type === 'acquirer' && this.#isTargetSupported(target),\n      )\n      .map(this.#attachRenderFunctionToTarget)\n  })\n\n  #getProgressIndicators = memoize((targets: Target[]) => {\n    return targets\n      .filter((target) => target.type === 'progressindicator')\n      .map(this.#attachRenderFunctionToTarget)\n  })\n\n  #getEditors = memoize((targets: Target[]) => {\n    return targets\n      .filter((target) => target.type === 'editor')\n      .map(this.#attachRenderFunctionToTarget)\n  })\n\n  render = (state: State<M, B>) => {\n    const pluginState = this.getPluginState()\n    const { files, capabilities, allowNewUpload } = state\n    const {\n      newFiles,\n      uploadStartedFiles,\n      completeFiles,\n      erroredFiles,\n      inProgressFiles,\n      inProgressNotPausedFiles,\n      processingFiles,\n\n      isUploadStarted,\n      isAllComplete,\n      isAllPaused,\n    } = this.uppy.getObjectOfFilesPerState()\n\n    const acquirers = this.#getAcquirers(pluginState.targets)\n    const progressindicators = this.#getProgressIndicators(pluginState.targets)\n    const editors = this.#getEditors(pluginState.targets)\n\n    let theme\n    if (this.opts.theme === 'auto') {\n      theme = capabilities.darkMode ? 'dark' : 'light'\n    } else {\n      theme = this.opts.theme\n    }\n\n    if (\n      ['files', 'folders', 'both'].indexOf(this.opts.fileManagerSelectionType) <\n      0\n    ) {\n      this.opts.fileManagerSelectionType = 'files'\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Unsupported option for \"fileManagerSelectionType\". Using default of \"${this.opts.fileManagerSelectionType}\".`,\n      )\n    }\n\n    return DashboardUI({\n      state,\n      isHidden: pluginState.isHidden,\n      files,\n      newFiles,\n      uploadStartedFiles,\n      completeFiles,\n      erroredFiles,\n      inProgressFiles,\n      inProgressNotPausedFiles,\n      processingFiles,\n      isUploadStarted,\n      isAllComplete,\n      isAllPaused,\n      totalFileCount: Object.keys(files).length,\n      totalProgress: state.totalProgress,\n      allowNewUpload,\n      acquirers,\n      theme,\n      disabled: this.opts.disabled,\n      disableLocalFiles: this.opts.disableLocalFiles,\n      direction: this.opts.direction,\n      activePickerPanel: pluginState.activePickerPanel,\n      showFileEditor: pluginState.showFileEditor,\n      saveFileEditor: this.saveFileEditor,\n      closeFileEditor: this.closeFileEditor,\n      disableInteractiveElements: this.disableInteractiveElements,\n      animateOpenClose: this.opts.animateOpenClose,\n      isClosing: pluginState.isClosing,\n      progressindicators,\n      editors,\n      autoProceed: this.uppy.opts.autoProceed,\n      id: this.id,\n      closeModal: this.requestCloseModal,\n      handleClickOutside: this.handleClickOutside,\n      handleInputChange: this.handleInputChange,\n      handlePaste: this.handlePaste,\n      inline: this.opts.inline,\n      showPanel: this.showPanel,\n      hideAllPanels: this.hideAllPanels,\n      i18n: this.i18n,\n      i18nArray: this.i18nArray,\n      uppy: this.uppy,\n      note: this.opts.note,\n      recoveredState: state.recoveredState,\n      metaFields: pluginState.metaFields,\n      resumableUploads: capabilities.resumableUploads || false,\n      individualCancellation: capabilities.individualCancellation,\n      isMobileDevice: capabilities.isMobileDevice,\n      fileCardFor: pluginState.fileCardFor,\n      toggleFileCard: this.toggleFileCard,\n      toggleAddFilesPanel: this.toggleAddFilesPanel,\n      showAddFilesPanel: pluginState.showAddFilesPanel,\n      saveFileCard: this.saveFileCard,\n      openFileEditor: this.openFileEditor,\n      canEditFile: this.canEditFile,\n      width: this.opts.width,\n      height: this.opts.height,\n      showLinkToFileUploadResult: this.opts.showLinkToFileUploadResult,\n      fileManagerSelectionType: this.opts.fileManagerSelectionType,\n      proudlyDisplayPoweredByUppy: this.opts.proudlyDisplayPoweredByUppy,\n      hideCancelButton: this.opts.hideCancelButton,\n      hideRetryButton: this.opts.hideRetryButton,\n      hidePauseResumeButton: this.opts.hidePauseResumeButton,\n      showRemoveButtonAfterComplete: this.opts.showRemoveButtonAfterComplete,\n      containerWidth: pluginState.containerWidth,\n      containerHeight: pluginState.containerHeight,\n      areInsidesReadyToBeVisible: pluginState.areInsidesReadyToBeVisible,\n      parentElement: this.el,\n      allowedFileTypes: this.uppy.opts.restrictions.allowedFileTypes,\n      maxNumberOfFiles: this.uppy.opts.restrictions.maxNumberOfFiles,\n      requiredMetaFields: this.uppy.opts.restrictions.requiredMetaFields,\n      showSelectedFiles: this.opts.showSelectedFiles,\n      showNativePhotoCameraButton: this.opts.showNativePhotoCameraButton,\n      showNativeVideoCameraButton: this.opts.showNativeVideoCameraButton,\n      nativeCameraFacingMode: this.opts.nativeCameraFacingMode,\n      singleFileFullScreen: this.opts.singleFileFullScreen,\n      handleCancelRestore: this.handleCancelRestore,\n      handleRequestThumbnail: this.handleRequestThumbnail,\n      handleCancelThumbnail: this.handleCancelThumbnail,\n      // drag props\n      isDraggingOver: pluginState.isDraggingOver,\n      handleDragOver: this.handleDragOver,\n      handleDragLeave: this.handleDragLeave,\n      handleDrop: this.handleDrop,\n    })\n  }\n\n  #addSpecifiedPluginsFromOptions = () => {\n    const { plugins } = this.opts\n\n    plugins.forEach((pluginID) => {\n      const plugin = this.uppy.getPlugin(pluginID)\n      if (plugin) {\n        ;(plugin as any).mount(this, plugin)\n      } else {\n        this.uppy.log(\n          `[Uppy] Dashboard could not find plugin '${pluginID}', make sure to uppy.use() the plugins you are specifying`,\n          'warning',\n        )\n      }\n    })\n  }\n\n  #autoDiscoverPlugins = () => {\n    this.uppy.iteratePlugins(this.#addSupportedPluginIfNoTarget)\n  }\n\n  #addSupportedPluginIfNoTarget = (plugin?: UnknownPlugin<M, B>) => {\n    // Only these types belong on the Dashboard,\n    // we wouldn’t want to try and mount Compressor or Tus, for example.\n    const typesAllowed = ['acquirer', 'editor']\n    if (plugin && !plugin.opts?.target && typesAllowed.includes(plugin.type)) {\n      const pluginAlreadyAdded = this.getPluginState().targets.some(\n        (installedPlugin) => plugin.id === installedPlugin.id,\n      )\n      if (!pluginAlreadyAdded) {\n        ;(plugin as any).mount(this, plugin)\n      }\n    }\n  }\n\n  #getStatusBarOpts() {\n    const {\n      hideUploadButton,\n      hideRetryButton,\n      hidePauseResumeButton,\n      hideCancelButton,\n      showProgressDetails,\n      hideProgressAfterFinish,\n      locale: l,\n      doneButtonHandler,\n    } = this.opts\n    return {\n      hideUploadButton,\n      hideRetryButton,\n      hidePauseResumeButton,\n      hideCancelButton,\n      showProgressDetails,\n      hideAfterFinish: hideProgressAfterFinish,\n      locale: l,\n      doneButtonHandler,\n    }\n  }\n\n  #getThumbnailGeneratorOpts() {\n    const {\n      thumbnailWidth,\n      thumbnailHeight,\n      thumbnailType,\n      waitForThumbnailsBeforeUpload,\n    } = this.opts\n    return {\n      thumbnailWidth,\n      thumbnailHeight,\n      thumbnailType,\n      waitForThumbnailsBeforeUpload,\n      // If we don't block on thumbnails, we can lazily generate them\n      lazy: !waitForThumbnailsBeforeUpload,\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  #getInformerOpts() {\n    return {\n      // currently no options\n    }\n  }\n\n  setOptions(opts: Partial<DashboardOptions<M, B>>) {\n    super.setOptions(opts)\n    this.uppy\n      .getPlugin(this.#getStatusBarId())\n      ?.setOptions(this.#getStatusBarOpts())\n\n    this.uppy\n      .getPlugin(this.#getThumbnailGeneratorId())\n      ?.setOptions(this.#getThumbnailGeneratorOpts())\n  }\n\n  #getStatusBarId() {\n    return `${this.id}:StatusBar`\n  }\n\n  #getThumbnailGeneratorId() {\n    return `${this.id}:ThumbnailGenerator`\n  }\n\n  #getInformerId() {\n    return `${this.id}:Informer`\n  }\n\n  install = (): void => {\n    // Set default state for Dashboard\n    this.setPluginState({\n      isHidden: true,\n      fileCardFor: null,\n      activeOverlayType: null,\n      showAddFilesPanel: false,\n      activePickerPanel: undefined,\n      showFileEditor: false,\n      metaFields: this.opts.metaFields,\n      targets: [],\n      // We'll make them visible once .containerWidth is determined\n      areInsidesReadyToBeVisible: false,\n      isDraggingOver: false,\n    })\n\n    const { inline, closeAfterFinish } = this.opts\n    if (inline && closeAfterFinish) {\n      throw new Error(\n        '[Dashboard] `closeAfterFinish: true` cannot be used on an inline Dashboard, because an inline Dashboard cannot be closed at all. Either set `inline: false`, or disable the `closeAfterFinish` option.',\n      )\n    }\n\n    const { allowMultipleUploads, allowMultipleUploadBatches } = this.uppy.opts\n    if (\n      (allowMultipleUploads || allowMultipleUploadBatches) &&\n      closeAfterFinish\n    ) {\n      this.uppy.log(\n        '[Dashboard] When using `closeAfterFinish`, we recommended setting the `allowMultipleUploadBatches` option to `false` in the Uppy constructor. See https://uppy.io/docs/uppy/#allowMultipleUploads-true',\n        'warning',\n      )\n    }\n\n    const { target } = this.opts\n\n    if (target) {\n      this.mount(target, this)\n    }\n\n    if (!this.opts.disableStatusBar) {\n      this.uppy.use(StatusBar, {\n        id: this.#getStatusBarId(),\n        target: this,\n        ...this.#getStatusBarOpts(),\n      })\n    }\n\n    if (!this.opts.disableInformer) {\n      this.uppy.use(Informer, {\n        id: this.#getInformerId(),\n        target: this,\n        ...this.#getInformerOpts(),\n      })\n    }\n\n    if (!this.opts.disableThumbnailGenerator) {\n      this.uppy.use(ThumbnailGenerator, {\n        id: this.#getThumbnailGeneratorId(),\n        ...this.#getThumbnailGeneratorOpts(),\n      })\n    }\n\n    // Dark Mode / theme\n    this.darkModeMediaQuery =\n      typeof window !== 'undefined' && window.matchMedia ?\n        window.matchMedia('(prefers-color-scheme: dark)')\n      : null\n\n    const isDarkModeOnFromTheStart =\n      this.darkModeMediaQuery ? this.darkModeMediaQuery.matches : false\n    this.uppy.log(\n      `[Dashboard] Dark mode is ${isDarkModeOnFromTheStart ? 'on' : 'off'}`,\n    )\n    this.setDarkModeCapability(isDarkModeOnFromTheStart)\n\n    if (this.opts.theme === 'auto') {\n      this.darkModeMediaQuery?.addListener(this.handleSystemDarkModeChange)\n    }\n\n    this.#addSpecifiedPluginsFromOptions()\n    this.#autoDiscoverPlugins()\n    this.initEvents()\n  }\n\n  uninstall = (): void => {\n    if (!this.opts.disableInformer) {\n      const informer = this.uppy.getPlugin(`${this.id}:Informer`)\n      // Checking if this plugin exists, in case it was removed by uppy-core\n      // before the Dashboard was.\n      if (informer) this.uppy.removePlugin(informer)\n    }\n\n    if (!this.opts.disableStatusBar) {\n      const statusBar = this.uppy.getPlugin(`${this.id}:StatusBar`)\n      if (statusBar) this.uppy.removePlugin(statusBar)\n    }\n\n    if (!this.opts.disableThumbnailGenerator) {\n      const thumbnail = this.uppy.getPlugin(`${this.id}:ThumbnailGenerator`)\n      if (thumbnail) this.uppy.removePlugin(thumbnail)\n    }\n\n    const { plugins } = this.opts\n    plugins.forEach((pluginID) => {\n      const plugin = this.uppy.getPlugin(pluginID)\n      if (plugin) (plugin as any).unmount()\n    })\n\n    if (this.opts.theme === 'auto') {\n      this.darkModeMediaQuery?.removeListener(this.handleSystemDarkModeChange)\n    }\n\n    if (this.opts.disablePageScrollWhenModalOpen) {\n      document.body.classList.remove('uppy-Dashboard-isFixed')\n    }\n\n    this.unmount()\n    this.removeEvents()\n  }\n}\n"],"mappings":"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","ignoreList":[]}