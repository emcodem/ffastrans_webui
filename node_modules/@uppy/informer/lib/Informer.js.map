{"version":3,"names":["h","UIPlugin","FadeIn","TransitionGroup","packageJson","Informer","constructor","uppy","opts","render","state","className","info","map","key","message","role","details","onClick","alert","type","id","title","install","target","mount","VERSION","version"],"sources":["Informer.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/no-noninteractive-element-interactions  */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport { h, type ComponentChild } from 'preact'\nimport { UIPlugin } from '@uppy/core'\nimport type { State, UIPluginOptions, Uppy } from '@uppy/core'\nimport type { Body, Meta } from '@uppy/utils/lib/UppyFile'\nimport FadeIn from './FadeIn.tsx'\nimport TransitionGroup from './TransitionGroup.ts'\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore We don't want TS to generate types for the package.json\nimport packageJson from '../package.json'\n\nexport type InformerOptions = UIPluginOptions\n\n/**\n * Informer\n * Shows rad message bubbles\n * used like this: `uppy.info('hello world', 'info', 5000)`\n * or for errors: `uppy.info('Error uploading img.jpg', 'error', 5000)`\n *\n */\nexport default class Informer<M extends Meta, B extends Body> extends UIPlugin<\n  UIPluginOptions,\n  M,\n  B\n> {\n  static VERSION = packageJson.version\n\n  constructor(uppy: Uppy<M, B>, opts?: UIPluginOptions) {\n    super(uppy, opts)\n    this.type = 'progressindicator'\n    this.id = this.opts.id || 'Informer'\n    this.title = 'Informer'\n  }\n\n  render = (state: State<M, B>): ComponentChild => {\n    return (\n      <div className=\"uppy uppy-Informer\">\n        <TransitionGroup>\n          {state.info.map((info) => (\n            <FadeIn key={info.message}>\n              <p role=\"alert\">\n                {info.message}{' '}\n                {info.details && (\n                  <span\n                    aria-label={info.details}\n                    data-microtip-position=\"top-left\"\n                    data-microtip-size=\"medium\"\n                    role=\"tooltip\"\n                    onClick={() =>\n                      // eslint-disable-next-line no-alert\n                      alert(`${info.message} \\n\\n ${info.details}`)\n                    }\n                  >\n                    ?\n                  </span>\n                )}\n              </p>\n            </FadeIn>\n          ))}\n        </TransitionGroup>\n      </div>\n    )\n  }\n\n  install(): void {\n    const { target } = this.opts\n    if (target) {\n      this.mount(target, this)\n    }\n  }\n}\n"],"mappings":"AAAA;AACA;AACA,SAASA,CAAC,QAA6B,QAAQ;AAC/C,SAASC,QAAQ,QAAQ,YAAY;AAGrC,OAAOC,MAAM,MAAM,aAAc;AACjC,OAAOC,eAAe,MAAM,sBAAsB;;AAElD;AACA;AAAA,MACOC,WAAW;EAAA;AAAA;AAIlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMC,QAAQ,SAAyCJ,QAAQ,CAI5E;EAGAK,WAAWA,CAACC,IAAgB,EAAEC,IAAsB,EAAE;IACpD,KAAK,CAACD,IAAI,EAAEC,IAAI,CAAC;IAAA,KAMnBC,MAAM,GAAIC,KAAkB,IAAqB;MAC/C,OACEV,CAAA;QAAKW,SAAS,EAAC;MAAoB,GACjCX,CAAA,CAACG,eAAe,QACbO,KAAK,CAACE,IAAI,CAACC,GAAG,CAAED,IAAI,IACnBZ,CAAA,CAACE,MAAM;QAACY,GAAG,EAAEF,IAAI,CAACG;MAAQ,GACxBf,CAAA;QAAGgB,IAAI,EAAC;MAAO,GACZJ,IAAI,CAACG,OAAO,EAAE,GAAG,EACjBH,IAAI,CAACK,OAAO,IACXjB,CAAA;QACE,cAAYY,IAAI,CAACK,OAAQ;QACzB,0BAAuB,UAAU;QACjC,sBAAmB,QAAQ;QAC3BD,IAAI,EAAC,SAAS;QACdE,OAAO,EAAEA,CAAA;QACP;QACAC,KAAK,CAAC,GAAGP,IAAI,CAACG,OAAO,SAASH,IAAI,CAACK,OAAO,EAAE;MAC7C,GACF,GAEK,CAEP,CACG,CACT,CACc,CACd,CAAC;IAEV,CAAC;IAjCC,IAAI,CAACG,IAAI,GAAG,mBAAmB;IAC/B,IAAI,CAACC,EAAE,GAAG,IAAI,CAACb,IAAI,CAACa,EAAE,IAAI,UAAU;IACpC,IAAI,CAACC,KAAK,GAAG,UAAU;EACzB;EAgCAC,OAAOA,CAAA,EAAS;IACd,MAAM;MAAEC;IAAO,CAAC,GAAG,IAAI,CAAChB,IAAI;IAC5B,IAAIgB,MAAM,EAAE;MACV,IAAI,CAACC,KAAK,CAACD,MAAM,EAAE,IAAI,CAAC;IAC1B;EACF;AACF;AAlDqBnB,QAAQ,CAKpBqB,OAAO,GAAGtB,WAAW,CAACuB,OAAO","ignoreList":[]}