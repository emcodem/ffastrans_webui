{"version":3,"sources":["webpack:///./public/app/features/users/SignupInvited.tsx"],"names":["navModel","main","icon","text","subTitle","breadcrumbs","title","url","node","SignupInvitedPage","code","useSelector","state","location","routeParams","useState","initFormModel","setInitFormModel","greeting","setGreeting","invitedBy","setInvitedBy","useAsync","getBackendSrv","get","invite","email","name","username","onSubmit","formData","post","inviteCode","window","href","getConfig","appSubUrl","Contents","className","contextSrv","user","orgName","defaultValues","register","errors","invalid","error","message","label","placeholder","ref","required","pattern","value","password","type"],"mappings":"2uDAkBA,IAAMA,EAAW,CACfC,KAAM,CACJC,KAAM,UACNC,KAAM,SACNC,SAAU,gCACVC,YAAa,CAAC,CAAEC,MAAO,QAASC,IAAK,WAEvCC,KAAM,CACJL,KAAM,KAIGM,EAAwB,WACnC,IAAMC,EAAOC,uBAAY,SAACC,GAAD,OAAuBA,EAAMC,SAASC,YAAYJ,QADlC,IAECK,qBAFD,GAElCC,EAFkC,KAEnBC,EAFmB,SAGTF,qBAHS,GAGlCG,EAHkC,KAGxBC,EAHwB,SAIPJ,qBAJO,GAIlCK,EAJkC,KAIvBC,EAJuB,KAKzCC,YAAQ,2BAAC,mHACcC,0BAAgBC,IAAhB,2BAAwCd,IADtD,OACDe,EADC,OAEPR,EAAiB,CACfS,MAAOD,EAAOC,MACdC,KAAMF,EAAOE,KACbC,SAAUH,EAAOC,QAGnBP,EAAYM,EAAOE,MAAQF,EAAOC,OAASD,EAAOG,UAClDP,EAAaI,EAAOL,WATb,2CAUN,CAACV,IAEJ,IAAMmB,EAAQ,4CAAG,WAAOC,GAAP,gGACTP,0BAAgBQ,KAAK,4BAArB,KAAuDD,EAAvD,CAAiEE,WAAYtB,KADpE,OAEfuB,OAAOpB,SAASqB,KAAOC,cAAYC,UAAY,IAFhC,2CAAH,sDAKd,OAAKpB,EAKH,kBAAC,IAAD,CAAMhB,SAAUA,GACd,kBAAC,IAAKqC,SAAN,KACE,wBAAIC,UAAU,oBAAd,SAAwCpB,GAAY,QAApD,KAEA,yBAAKoB,UAAU,uBACb,4BAAKlB,GAAa,WADpB,wDACyF,IACvF,0BAAMkB,UAAU,kBAAkBC,IAAWC,KAAKC,SAClD,6BAHF,+FAMA,kBAAC,OAAD,CAAMC,cAAe1B,EAAea,SAAUA,IAC3C,gBAAGc,EAAH,EAAGA,SAAUC,EAAb,EAAaA,OAAb,OACC,oCACE,kBAAC,QAAD,CAAOC,UAAWD,EAAOlB,MAAOoB,MAAOF,EAAOlB,OAASkB,EAAOlB,MAAMqB,QAASC,MAAM,SACjF,kBAAC,QAAD,CACEC,YAAY,oBACZtB,KAAK,QACLuB,IAAKP,EAAS,CACZQ,SAAU,oBACVC,QAAS,CACPC,MAAO,YACPN,QAAS,yBAKjB,kBAAC,QAAD,CAAOF,UAAWD,EAAOjB,KAAMmB,MAAOF,EAAOjB,MAAQiB,EAAOjB,KAAKoB,QAASC,MAAM,QAC9E,kBAAC,QAAD,CAAOC,YAAY,kBAAkBtB,KAAK,OAAOuB,IAAKP,KAExD,kBAAC,QAAD,CAAOE,UAAWD,EAAOhB,SAAUkB,MAAOF,EAAOhB,UAAYgB,EAAOhB,SAASmB,QAASC,MAAM,YAC1F,kBAAC,QAAD,CAAOC,YAAY,WAAWtB,KAAK,WAAWuB,IAAKP,EAAS,CAAEQ,SAAU,4BAE1E,kBAAC,QAAD,CAAON,UAAWD,EAAOU,SAAUR,MAAOF,EAAOU,UAAYV,EAAOU,SAASP,QAASC,MAAM,YAC1F,kBAAC,QAAD,CACEO,KAAK,WACLN,YAAY,WACZtB,KAAK,WACLuB,IAAKP,EAAS,CAAEQ,SAAU,4BAI9B,kBAAC,SAAD,CAAQI,KAAK,UAAb,iBA7CH,MAsDI9C","file":"SignupInvited.63a9c1d648180e457252.js","sourcesContent":["import React, { FC, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { Button, Field, Form, Input } from '@grafana/ui';\nimport { useAsync } from 'react-use';\n\nimport { StoreState } from 'app/types';\nimport Page from 'app/core/components/Page/Page';\nimport { contextSrv } from 'app/core/core';\nimport { getConfig } from 'app/core/config';\n\ninterface FormModel {\n  email: string;\n  name?: string;\n  username: string;\n  password?: string;\n}\n\nconst navModel = {\n  main: {\n    icon: 'grafana',\n    text: 'Invite',\n    subTitle: 'Register your Grafana account',\n    breadcrumbs: [{ title: 'Login', url: 'login' }],\n  },\n  node: {\n    text: '',\n  },\n};\n\nexport const SignupInvitedPage: FC = () => {\n  const code = useSelector((state: StoreState) => state.location.routeParams.code);\n  const [initFormModel, setInitFormModel] = useState<FormModel>();\n  const [greeting, setGreeting] = useState<string>();\n  const [invitedBy, setInvitedBy] = useState<string>();\n  useAsync(async () => {\n    const invite = await getBackendSrv().get(`/api/user/invite/${code}`);\n    setInitFormModel({\n      email: invite.email,\n      name: invite.name,\n      username: invite.email,\n    });\n\n    setGreeting(invite.name || invite.email || invite.username);\n    setInvitedBy(invite.invitedBy);\n  }, [code]);\n\n  const onSubmit = async (formData: FormModel) => {\n    await getBackendSrv().post('/api/user/invite/complete', { ...formData, inviteCode: code });\n    window.location.href = getConfig().appSubUrl + '/';\n  };\n\n  if (!initFormModel) {\n    return null;\n  }\n\n  return (\n    <Page navModel={navModel}>\n      <Page.Contents>\n        <h3 className=\"page-sub-heading\">Hello {greeting || 'there'}.</h3>\n\n        <div className=\"modal-tagline p-b-2\">\n          <em>{invitedBy || 'Someone'}</em> has invited you to join Grafana and the organization{' '}\n          <span className=\"highlight-word\">{contextSrv.user.orgName}</span>\n          <br />\n          Please complete the following and choose a password to accept your invitation and continue:\n        </div>\n        <Form defaultValues={initFormModel} onSubmit={onSubmit}>\n          {({ register, errors }) => (\n            <>\n              <Field invalid={!!errors.email} error={errors.email && errors.email.message} label=\"Email\">\n                <Input\n                  placeholder=\"email@example.com\"\n                  name=\"email\"\n                  ref={register({\n                    required: 'Email is required',\n                    pattern: {\n                      value: /^\\S+@\\S+$/,\n                      message: 'Email is invalid',\n                    },\n                  })}\n                />\n              </Field>\n              <Field invalid={!!errors.name} error={errors.name && errors.name.message} label=\"Name\">\n                <Input placeholder=\"Name (optional)\" name=\"name\" ref={register} />\n              </Field>\n              <Field invalid={!!errors.username} error={errors.username && errors.username.message} label=\"Username\">\n                <Input placeholder=\"Username\" name=\"username\" ref={register({ required: 'Username is required' })} />\n              </Field>\n              <Field invalid={!!errors.password} error={errors.password && errors.password.message} label=\"Password\">\n                <Input\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  ref={register({ required: 'Password is required' })}\n                />\n              </Field>\n\n              <Button type=\"submit\">Sign Up</Button>\n            </>\n          )}\n        </Form>\n      </Page.Contents>\n    </Page>\n  );\n};\n\nexport default SignupInvitedPage;\n"],"sourceRoot":""}